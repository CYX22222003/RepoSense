[{"path":"src/main/java/seedu/address/MainApp.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.application.Application;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.XmlAddressBookStorage;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" * The main entry point to the application.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"    public static final Version VERSION \u003d new Version(1, 1, 0, true);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected UserPrefs userPrefs;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(getApplicationParameter(\"config\"));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        userPrefs \u003d initPrefs(userPrefsStorage);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new XmlAddressBookStorage(userPrefs.getAddressBookFilePath());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic, config, userPrefs);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        initEventsCenter();","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private String getApplicationParameter(String parameterName) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e applicationParameters \u003d getParameters().getNamed();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return applicationParameters.get(parameterName);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, UserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    protected Config initConfig(String configFilePath) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Config initializedConfig;","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String configFilePathUsed;","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return initializedConfig;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * reading from the file.","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String prefsFilePath \u003d storage.getUserPrefsFilePath();","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return initializedPrefs;","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void initEventsCenter() {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().registerHandler(this);","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void stop() {","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.stop();","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Platform.exit();","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        System.exit(0);","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void handleExitAppRequestEvent(ExitAppRequestEvent event) {","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        this.stop();","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        launch(args);","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":211}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Config values used by the app","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Config {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_CONFIG_FILE \u003d \"config.json\";","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    private String appTitle \u003d \"My Team Manager\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private String userPrefsFilePath \u003d \"preferences.json\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String getAppTitle() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return appTitle;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setAppTitle(String appTitle) {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.appTitle \u003d appTitle;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return logLevel;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getUserPrefsFilePath() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(String userPrefsFilePath) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Objects.equals(appTitle, o.appTitle)","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(logLevel, o.logLevel)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Objects.hash(appTitle, logLevel, userPrefsFilePath);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        sb.append(\"App title : \" + appTitle);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        sb.append(\"\\nCurrent log level : \" + logLevel);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":71}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_INVALID_THEME \u003d \"This theme does not exist!\\n\";","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_TEAM_NOT_FOUND \u003d \"Team does not exist or is not specified!\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_ALL_INDEX \u003d \"All person index provided is invalid\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":15}},{"path":"src/main/java/seedu/address/commons/events/ui/ChangeTagColourEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Indicates a request to change tag colour","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class ChangeTagColourEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public final String tagColour;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"    public final String tagName;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    public ChangeTagColourEvent(String tagName, String tagColour) {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d tagColour;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":23}},{"path":"src/main/java/seedu/address/commons/events/ui/ChangeThemeEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**@@author Codee */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" * Indicates a request for theme change.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public final String theme;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    public ChangeThemeEvent(String theme) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"        this.theme \u003d theme;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        return this.getClass().toString();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":21}},{"path":"src/main/java/seedu/address/commons/events/ui/ClearTeamsEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Event handler for clearing of all teams.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"// @@author Codee","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ClearTeamsEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ClearTeamsEvent() {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":7,"-":13}},{"path":"src/main/java/seedu/address/commons/events/ui/DeselectTeamEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Indicates a request to deselected selected teams.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"public class DeselectTeamEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"    public DeselectTeamEvent() {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":17}},{"path":"src/main/java/seedu/address/commons/events/ui/HighlightSelectedTeamEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Indicates a request to highlight selected team name.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class HighlightSelectedTeamEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public final String teamName;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    public HighlightSelectedTeamEvent(String teamName) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":21}},{"path":"src/main/java/seedu/address/commons/events/ui/PersonDetailsChangedEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" * Represents a change in the person details panel.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":" *","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":" /** @@author Codee */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"public class PersonDetailsChangedEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    private final Person editedPerson;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    public PersonDetailsChangedEvent(Person editedPerson, Index index) {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"        this.editedPerson \u003d editedPerson;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"    public Person getPerson() {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"        return this.editedPerson;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"    public Index getIndex() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"        return this.index;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":34}},{"path":"src/main/java/seedu/address/commons/events/ui/PersonDetailsChangedNoParamEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Represents a change in the person details panel, but no paramaters.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" *","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" /** @@author Codee */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class PersonDetailsChangedNoParamEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public PersonDetailsChangedNoParamEvent() { }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":17}},{"path":"src/main/java/seedu/address/commons/events/ui/ShowNewTeamNameEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Indicates a request to show new team name.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"public class ShowNewTeamNameEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"    public final String teamName;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    public ShowNewTeamNameEvent(String teamName) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":22}},{"path":"src/main/java/seedu/address/commons/events/ui/UndoTeamsEvent.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.commons.events.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.BaseEvent;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":" * Event handler for undoing clearing of all teams.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"// @@author Codee","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UndoTeamsEvent extends BaseEvent {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public UndoTeamsEvent() {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return this.getClass().getSimpleName();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":7,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandTrie;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * API of the Logic component","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Logic {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    /** Returns an unmodifiable view of list of teams */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    ObservableList\u003cTeam\u003e getInitTeamList();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /** Returns the list of input entered by the user, encapsulated in a {@code ListElementPointer} object */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ListElementPointer getHistorySnapshot();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns the command trie. */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    CommandTrie getCommandTrie();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":4,"-":32}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.ComponentManager;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandTrie;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class LogicManager extends ComponentManager implements Logic {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Model model;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final CommandHistory history;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UndoRedoStack undoRedoStack;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final CommandTrie commandTrie;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public LogicManager(Model model) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.model \u003d model;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        history \u003d new CommandHistory();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        undoRedoStack \u003d new UndoRedoStack();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        commandTrie \u003d new CommandTrie();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"            Command command \u003d addressBookParser.parseCommand(commandText, model.getLockState());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            command.setData(model, history, undoRedoStack);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            undoRedoStack.push(command);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return result;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } finally {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            history.add(commandText);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    public ObservableList\u003cTeam\u003e getInitTeamList() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        return model.getInitTeamList();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ListElementPointer getHistorySnapshot() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new ListElementPointer(history.getHistory());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandTrie getCommandTrie() {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return commandTrie;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":6,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVATAR;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JERSEY_NUMBER;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM_NAME;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.DeselectTeamEvent;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.HighlightSelectedTeamEvent;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"//@@author lithiumlkid","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Adds a player to the address book.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"a\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a player to the address book. \"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TEAM_NAME + \"TEAMNAME] \"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_JERSEY_NUMBER + \"JERSEY_NUMBER] \"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_RATING + \"0 \"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_POSITION + \"1 \"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_JERSEY_NUMBER + \"17 \"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"            + PREFIX_TAG + \"goodAttitude\";","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d PREFIX_NAME + \"NAME \"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_JERSEY_NUMBER + \"JERSEY_NUMBER] \"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\";","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New player added: %1$s\";","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This player already exists in the address book\";","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Avatar image file specified does not exist\";","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private final Person toAdd;","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(person);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!toAdd.getAvatar().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                toAdd.getAvatar().setFilePath(toAdd.getName().fullName);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            model.addPerson(toAdd);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!toAdd.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                model.assignPersonToTeam(toAdd, toAdd.getTeamName());","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                model.updateFilteredPersonList(toAdd.getTeamName());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                EventsCenter.getInstance().post(new HighlightSelectedTeamEvent(toAdd.getTeamName().toString()));","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                EventsCenter.getInstance().post(new DeselectTeamEvent());","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FILE_NOT_FOUND);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (TeamNotFoundException e) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_TEAM_NOT_FOUND);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        TeamName teamName \u003d toAdd.getTeamName();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!model.getAddressBook().getTeamList().stream().anyMatch(t -\u003e t.getTeamName().equals(teamName))) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (!teamName.toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                throw new CommandException((Messages.MESSAGE_TEAM_NOT_FOUND));","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":1,"-":122}},{"path":"src/main/java/seedu/address/logic/commands/ChangeThemeCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ChangeThemeEvent;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.ui.MainWindow;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":" * Changes the theme of the Address Book.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommand extends Command {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    public static final String COMMAND_WORD \u003d \"changeTheme\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    public static final String COMMAND_ALIAS \u003d \"cte\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"            + \": Changes the theme of MTM.\\n\"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"            + \"Parameters: THEME (must be either Light, or Dark)\\n\"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"            + \"Examples: changeTheme Light, cte Dark\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_THEME_SUCCESS \u003d \"Theme updated to: %1$s\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    private final String theme;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    public ChangeThemeCommand(String theme) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"        this.theme \u003d theme.trim();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"        if (!isValidTheme(this.theme)) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_THEME);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        if ((MainWindow.getCurrentTheme()).contains(this.theme)) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"            throw new CommandException(\"Theme is already set to \" + this.theme + \"!\");","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new ChangeThemeEvent(this.theme));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        return new CommandResult(String.format(MESSAGE_THEME_SUCCESS, this.theme));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"    private boolean isValidTheme(String theme) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"        return theme.equals(\"Light\") || theme.equals(\"Dark\");","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"                || (other instanceof ChangeThemeCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"                \u0026\u0026 this.theme.equals(((ChangeThemeCommand) other).theme)); // state check","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":54}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ClearTeamsEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"c\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.resetData(new AddressBook());","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // @@author Codee","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new ClearTeamsEvent());","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // @@author","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":2,"-":25}},{"path":"src/main/java/seedu/address/logic/commands/CreateCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ShowNewTeamNameEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Creates a team to the application","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CreateCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_ALIAS \u003d \"ct\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"Creates a team in MTM. \"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"TEAM_NAME\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Arsenal\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"TEAM_NAME\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New team created: %1$s\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_TEAM \u003d \"This team already exist in the manager\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Team toCreate;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a CreateCommand to add the specified (@code Team)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CreateCommand(Team team) {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(team);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.toCreate \u003d team;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            model.createTeam(toCreate);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (DuplicateTeamException e) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TEAM);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new ShowNewTeamNameEvent(toCreate.getTeamName().toString()));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toCreate.getTeamName().toString()));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof CreateCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 toCreate.equals(((CreateCommand) other).toCreate));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":3,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s last displayed index from the address book.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"d\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the last person listing.\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Person personToDelete;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(personToDelete);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The target person cannot be missing\");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((DeleteCommand) other).targetIndex) // state check","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(this.personToDelete, ((DeleteCommand) other).personToDelete));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AVATAR;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JERSEY_NUMBER;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.DeselectTeamEvent;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedEvent;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"//@@author lithiumlkid","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":" * Edits the details of an existing player in the address book.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"e\";","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the player identified \"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last player listing. \"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_JERSEY_NUMBER + \"JERSEY_NUMBER] \"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX \"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_RATING + \"RATING] \"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_JERSEY_NUMBER + \"JERSEY_NUMBER] \"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\";","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This player already exists in the address book.\";","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Avatar image file specified does not exist\";","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Person personToEdit;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private Person editedPerson;","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param index of the player in the filtered player list to edit","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the player with","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (!editedPerson.getAvatar().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                editedPerson.getAvatar().setFilePath(editedPerson.getName().fullName);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            model.updatePerson(personToEdit, editedPerson);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The target player cannot be missing\");","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FILE_NOT_FOUND);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        //@@author Codee","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedEvent(editedPerson, index));","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //@@author","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new DeselectTeamEvent());","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * NOTE: Private fields will not be edited.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d (personToEdit.getPhone().isPrivate())","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                ? personToEdit.getPhone() : editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d (personToEdit.getEmail().isPrivate())","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                ? personToEdit.getEmail() : editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d (personToEdit.getAddress().isPrivate())","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"                ? personToEdit.getAddress() : editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Remark updatedRemark \u003d (personToEdit.getRemark().isPrivate())","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                ? personToEdit.getRemark() : personToEdit.getRemark();","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        TeamName updatedTeamName \u003d personToEdit.getTeamName();","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Rating updatedRating \u003d editPersonDescriptor.getRating().orElse(personToEdit.getRating());","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JerseyNumber updatedJerseyNumber \u003d editPersonDescriptor.getJerseyNumber()","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .orElse(personToEdit.getJerseyNumber());","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Position updatedPosition \u003d editPersonDescriptor.getPosition().orElse(personToEdit.getPosition());","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Avatar updatedAvatar \u003d editPersonDescriptor.getAvatar().orElse(personToEdit.getAvatar());","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark,","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                updatedTeamName, updatedTags, updatedRating, updatedPosition, updatedJerseyNumber, updatedAvatar);","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // state check","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor)","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(personToEdit, e.personToEdit);","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Stores the details to edit the player with. Each non-empty field value will replace the","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * corresponding field value of the player.","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private Name name;","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        private Phone phone;","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        private Email email;","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        private Address address;","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        private Rating rating;","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        private Position position;","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        private JerseyNumber jerseyNumber;","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        private Avatar avatar;","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Copy constructor.","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            setRating(toCopy.rating);","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            setPosition(toCopy.position);","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            setJerseyNumber(toCopy.jerseyNumber);","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            setAvatar(toCopy.avatar);","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(this.name, this.phone, this.email, this.address, this.tags,","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    this.rating, this.position, this.jerseyNumber, this.avatar);","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.name \u003d name;","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            this.email \u003d email;","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            this.address \u003d address;","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"         * if modification is attempted.","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public void setRating(Rating rating) {","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"            this.rating \u003d rating;","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public Optional\u003cRating\u003e getRating() {","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(rating);","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public void setPosition(Position position) {","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"            this.position \u003d position;","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public Optional\u003cPosition\u003e getPosition() {","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(position);","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"        public void setJerseyNumber(JerseyNumber jerseyNumber) {","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"            this.jerseyNumber \u003d jerseyNumber;","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public Optional\u003cJerseyNumber\u003e getJerseyNumber() {","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(jerseyNumber);","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public void setAvatar(Avatar avatar) {","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"            this.avatar \u003d avatar;","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        public Optional\u003cAvatar\u003e getAvatar() {","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(avatar);","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"            // short circuit if same object","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"                return false;","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"            // state check","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getRating().equals(e.getRating())","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPosition().equals(e.getPosition())","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getJerseyNumber().equals(e.getJerseyNumber())","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAvatar().equals(e.getAvatar());","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":1,"-":335}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Keyword matching is case sensitive.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"f\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-sensitive) and displays them as a list with index numbers.\\n\"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"KEYWORD [MORE KEYWORD]\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new CommandResult(getMessageForPersonListShownSummary(model.getFilteredPersonList().size()));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.predicate.equals(((FindCommand) other).predicate)); // state check","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/HistoryCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Lists all the commands entered by user from the start of app launch.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HistoryCommand extends Command {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"h\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Entered commands (from most recent to earliest):\\n%1$s\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NO_HISTORY \u003d \"You have not yet entered any commands.\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        List\u003cString\u003e previousCommands \u003d history.getHistory();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (previousCommands.isEmpty()) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_NO_HISTORY);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Collections.reverse(previousCommands);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, String.join(\"\\n\", previousCommands)));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setData(Model model, CommandHistory history, UndoRedoStack undoRedoStack) {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(history);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.history \u003d history;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/KeyCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import java.nio.charset.StandardCharsets;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import com.google.common.hash.Hashing;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":" * Sets lock in model to true/false depending on current state","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"public class KeyCommand extends Command {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_WORD \u003d \"key\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"k\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Toggles the lock on MTM. \"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"            + \"Functionality of MTM reduced\\n\"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"            + \"Input empty password to see current lock state\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"            + \"Parameters: [PASSWORD]\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"            + \"Example: \" + COMMAND_WORD","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"            + \" myPassword\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"MTM lock toggled!\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_WRONG_PASS \u003d \"Password entered is incorrect. Please try again.\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"[PASSWORD]\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"    private String password;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(KeyCommand.class);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"    public KeyCommand(String password) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        this.password \u003d password;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"     * Checks if input password is correct.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"    private boolean correctPassword() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"        UserPrefs up \u003d model.getUserPrefs();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        String hash \u003d Hashing.sha256().hashString(password, StandardCharsets.UTF_8).toString();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"        return hash.equals(up.getAddressBookHashedPass());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"    private boolean emptyPass() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"        return password.isEmpty();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"        if (emptyPass()) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"            return new CommandResult(MESSAGE_USAGE + \"\\nLock state is now: \"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"                    + Boolean.toString(model.getLockState()));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        if (correctPassword()) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"            if (model.getLockState()) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"                model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"                model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"            logger.info(\"Lock state is now: \" + Boolean.toString(model.getLockState()));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"            return new CommandResult(MESSAGE_SUCCESS + \"\\nLock state is now: \"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"                    + Boolean.toString(model.getLockState()));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"            throw new CommandException(MESSAGE_WRONG_PASS);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":74}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.DeselectTeamEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"l\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new DeselectTeamEvent());","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedNoParamEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.UndoTeamsEvent;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Redo the previously undone command.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class RedoCommand extends Command {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"r\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo success!\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to redo!\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireAllNonNull(model, undoRedoStack);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!undoRedoStack.canRedo()) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        undoRedoStack.popRedo().redo();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // @@author Codee","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new UndoTeamsEvent());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedNoParamEvent());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // @@author","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setData(Model model, CommandHistory commandHistory, UndoRedoStack undoRedoStack) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.undoRedoStack \u003d undoRedoStack;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":3,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedEvent;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Updates the remark of an existing player in the address book.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class RemarkCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_ALIAS \u003d \"rm\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the remark of the player identified \"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last player listing. \"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"Must put on field\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Remark added to: %1$s\";","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Remark removed from: %1$s\";","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Remark remark;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Person personToEdit;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Person editedPerson;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, Remark remark) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(personToEdit);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            model.updatePerson(personToEdit, editedPerson);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Updating remark should not result in duplicate\");","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The target player cannot be missing\");","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedEvent(editedPerson, index));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(getSuccessMessage(editedPerson));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    protected void preprocessUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTeamName(), personToEdit.getTags(),","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                personToEdit.getRating(), personToEdit.getPosition(), personToEdit.getJerseyNumber(),","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                personToEdit.getAvatar());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // state check","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Gets the corresponding success message based on the remark field from {@code personToEdit} after editing.","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private String getSuccessMessage(Person person) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String message \u003d remark.value.isEmpty() ? MESSAGE_DELETE_REMARK_SUCCESS : MESSAGE_ADD_REMARK_SUCCESS;","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":4,"-":107}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Selects a person identified using it\u0027s last displayed index from the address book.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class SelectCommand extends Command {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"s\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Selects the person identified by the index number used in the last person listing.\\n\"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SELECT_PERSON_SUCCESS \u003d \"Selected Person: %1$s\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public SelectCommand(Index targetIndex) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new JumpToListRequestEvent(targetIndex));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_PERSON_SUCCESS, targetIndex.getOneBased()));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof SelectCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.targetIndex.equals(((SelectCommand) other).targetIndex)); // state check","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/SetCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG_COLOUR;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ChangeTagColourEvent;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":" * Adds a colour to a tag in address book.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"/** @@author Codee Ong Ong */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"public class SetCommand extends Command {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    public static final String COMMAND_WORD \u003d \"setTagColour\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public static final String COMMAND_ALIAS \u003d \"stc\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the colour of tags to the colour of choice \"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"            + \"Parameters: \"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"TAG \"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_TAG_COLOUR + \"TAG_COLOUR\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"            + PREFIX_TAG + \"friends \"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"            + PREFIX_TAG_COLOUR + \"green\\n\"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"            + \"Colours to choose from are : teal, red, yellow, blue, orange, brown, \\n\"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"            + \"green, pink, black, grey\\n\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d PREFIX_TAG + \"TAG \" + PREFIX_TAG_COLOUR + \"TAG_COLOUR\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_INVALID_TAG \u003d \"tag is invalid! Please input a valid tag name!\";","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"tag %1$s colour changed to %2$s\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    private final Tag tagToSet;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    private final String tagColour;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"     * Creates an AddCommand to add the specified {@code Person}","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    public SetCommand(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"        requireNonNull(tag);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        tagToSet \u003d tag;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"        tagColour \u003d colour;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"    public CommandResult execute() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        boolean isTagValid \u003d model.setTagColour(tagToSet, tagColour);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"        if (!tagToSet.isValidTagName(tagToSet.getTagName()) || !isTagValid) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"            return new CommandResult(String.format(MESSAGE_INVALID_TAG));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"        EventsCenter.getInstance().post(new ChangeTagColourEvent(tagToSet.getTagName(), tagColour));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tagToSet.toString(), tagColour));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        // Check if","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"        // (a) Object is the same object","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"        // (b) Object is an instance of the object and that toSet, tag and color are the same","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"                || (other instanceof SetCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"                \u0026\u0026 this.tagToSet.getTagName().equals(((SetCommand) other).tagToSet.getTagName()))","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"                \u0026\u0026 this.tagColour.equals(((SetCommand) other).tagColour);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":65,"-":4}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":" * Sorts all players in address book by field. Can be done in asc or desc order.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"public class SortCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"so\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"    public static final String BY_ASCENDING \u003d \"asc\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    public static final String BY_DESCENDING \u003d \"desc\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts players in address book \"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"            + \"by fields in either ascending or descending order.\\n\"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"            + \"Parameters: FIELD ORDER\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"            + \"Accepted fields for sort: name, email, address, rating, jersey, pos\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"            + \"Accepted orders: asc \u0026 desc\\n\"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"            + \"Example: \" + COMMAND_WORD","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"            + \" name \" + BY_ASCENDING;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"FIELD ORDER\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Players in address book have been sorted.\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_EMPTY_BOOK \u003d \"No player(s) to sort.\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"    private final String field;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"    private final String order;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"    public SortCommand(String field, String order) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(field);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(order);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"        this.field \u003d field;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        this.order \u003d order;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    public String getField() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        return this.field;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    public String getOrder() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        return this.order;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"            model.sortPlayers(getField(), getOrder());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"        } catch (NoPlayerException npe) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"            throw new CommandException(MESSAGE_EMPTY_BOOK);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":62}},{"path":"src/main/java/seedu/address/logic/commands/TogglePrivacyCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedEvent;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.util.CollectionUtil;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":" * Toggles privacy of fields of player identified using it\u0027s last displayed index from the address book.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"public class TogglePrivacyCommand extends UndoableCommand {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_WORD \u003d \"toggleprivacy\";","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"tp\";","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Toggles the field privacy of the person\"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"            + \" identified by the index number used in the last person listing.\\n\"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_PHONE + \"]\"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_EMAIL + \"]\"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_REMARK + \"]\"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_RATING + \"]\"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_ADDRESS + \"]\\n\"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"            + PREFIX_PHONE + \" \"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"            + PREFIX_EMAIL + \" \"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"            + PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Changed the Privacy of the Person: %1$s\";","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_NO_FIELDS \u003d \"No prefixes were specified!\";","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"INDEX \"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE]\"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"            + \" [\" + PREFIX_EMAIL + \"EMAIL]\"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"            + \" [\" + PREFIX_REMARK + \"REMARK]\"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"            + \" [\" + PREFIX_RATING + \"RATING]\"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"            + \" [\" + PREFIX_ADDRESS + \"ADDRESS]\";","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"    private final EditPersonPrivacy epp;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"    private Person personToEdit;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"    private Person editedPerson;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"     * @param index of the person in the filtered person list to edit privacy","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"    public TogglePrivacyCommand(Index index, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(epp);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"        this.epp \u003d epp;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lohtianwei"},"content":"    public CommandResult executeUndoableCommand() throws CommandException {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lohtianwei"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lohtianwei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"        personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"            editedPerson \u003d createEditedPrivacyPerson(personToEdit, epp);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"        } catch (IllegalValueException e) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Person must have all fields!\");","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lohtianwei"},"content":"            model.updatePerson(personToEdit, editedPerson);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lohtianwei"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lohtianwei"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"The target person cannot be missing\");","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedEvent(editedPerson, index));","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedPerson));","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"     * edited with {@code editPersonPrivacy}.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"     * NOTE: Private fields will not be edited.","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"    private static Person createEditedPrivacyPerson(Person personToEdit, EditPersonPrivacy epp)","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"            throws IllegalValueException {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lohtianwei"},"content":"        Name updatedName \u003d personToEdit.getName();","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lohtianwei"},"content":"        Phone updatedPhone \u003d createPhonePrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"        Email updatedEmail \u003d createEmailPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lohtianwei"},"content":"        Address updatedAddress \u003d createAddressPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"        Remark updatedRemark \u003d createRemarkPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lohtianwei"},"content":"        TeamName updatedTeamName \u003d personToEdit.getTeamName();","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lohtianwei"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lohtianwei"},"content":"        Rating updatedRating \u003d createRatingPrivacy(personToEdit, epp);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lohtianwei"},"content":"        Position updatedPosition \u003d personToEdit.getPosition();","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lohtianwei"},"content":"        JerseyNumber updatedJerseyNumber \u003d personToEdit.getJerseyNumber();","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"        Avatar updatedAvatar \u003d personToEdit.getAvatar();","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark,","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"                updatedTeamName, updatedTags, updatedRating, updatedPosition, updatedJerseyNumber, updatedAvatar);","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Phone) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Phone) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"    private static Phone createPhonePrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"        Phone phone;","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"            if (person.getPhone().isPrivate()) {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"                person.getPhone().togglePrivacy();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"                phone \u003d new Phone(person.getPhone().toString());","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"                person.getPhone().togglePrivacy();","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"                phone \u003d new Phone(person.getPhone().toString());","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Phone\");","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivatePhone() !\u003d null) {","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lohtianwei"},"content":"            phone.setPrivate(person.getPhone().isPrivate());","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lohtianwei"},"content":"            phone.togglePrivacy();","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lohtianwei"},"content":"            phone.setPrivate(person.getPhone().isPrivate());","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lohtianwei"},"content":"        return phone;","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Email) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Email) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lohtianwei"},"content":"    private static Email createEmailPrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lohtianwei"},"content":"        Email email;","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lohtianwei"},"content":"            if (person.getEmail().isPrivate()) {","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lohtianwei"},"content":"                person.getEmail().togglePrivacy();","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lohtianwei"},"content":"                email \u003d new Email(person.getEmail().toString());","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lohtianwei"},"content":"                person.getEmail().togglePrivacy();","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lohtianwei"},"content":"                email \u003d new Email(person.getEmail().toString());","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Email\");","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivateEmail() !\u003d null) {","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lohtianwei"},"content":"            email.setPrivate(person.getEmail().isPrivate());","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lohtianwei"},"content":"            email.togglePrivacy();","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lohtianwei"},"content":"            email.setPrivate(person.getEmail().isPrivate());","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lohtianwei"},"content":"        return email;","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Address) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Address) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lohtianwei"},"content":"    private static Address createAddressPrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lohtianwei"},"content":"        Address address;","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lohtianwei"},"content":"            if (person.getAddress().isPrivate()) {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lohtianwei"},"content":"                person.getAddress().togglePrivacy();","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lohtianwei"},"content":"                address \u003d new Address(person.getAddress().toString());","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lohtianwei"},"content":"                person.getAddress().togglePrivacy();","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lohtianwei"},"content":"                address \u003d new Address(person.getAddress().toString());","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Address\");","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivateAddress() !\u003d null) {","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"lohtianwei"},"content":"            address.setPrivate(person.getAddress().isPrivate());","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"lohtianwei"},"content":"            address.togglePrivacy();","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"lohtianwei"},"content":"            address.setPrivate(person.getAddress().isPrivate());","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"lohtianwei"},"content":"        return address;","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Remark) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Remark) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"lohtianwei"},"content":"    private static Remark createRemarkPrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"lohtianwei"},"content":"        Remark remark;","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"lohtianwei"},"content":"            if (person.getRemark().isPrivate()) {","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"lohtianwei"},"content":"                person.getRemark().togglePrivacy();","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"lohtianwei"},"content":"                remark \u003d new Remark(person.getRemark().toString());","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"lohtianwei"},"content":"                person.getRemark().togglePrivacy();","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"lohtianwei"},"content":"                remark \u003d new Remark(person.getRemark().toString());","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Remark\");","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivateRemark() !\u003d null) {","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lohtianwei"},"content":"            remark.setPrivate(person.getRemark().isPrivate());","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"lohtianwei"},"content":"            remark.togglePrivacy();","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"lohtianwei"},"content":"            remark.setPrivate(person.getRemark().isPrivate());","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lohtianwei"},"content":"        return remark;","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"lohtianwei"},"content":"     * Creates a new (@code Rating) based on the input (@code Person) and (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"lohtianwei"},"content":"     * @return A (@code Rating) with the same value as that of the (@code Person)\u0027s but with the privacy set to that","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"lohtianwei"},"content":"     * of the (@code EditPersonPrivacy)","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"lohtianwei"},"content":"    private static Rating createRatingPrivacy(Person person, EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"lohtianwei"},"content":"        Rating rating;","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"lohtianwei"},"content":"            if (person.getRating().isPrivate()) {","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"lohtianwei"},"content":"                person.getRating().togglePrivacy();","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"lohtianwei"},"content":"                rating \u003d new Rating(person.getRating().toString());","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"lohtianwei"},"content":"                person.getRating().togglePrivacy();","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"lohtianwei"},"content":"            } else {","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"lohtianwei"},"content":"                rating \u003d new Rating(person.getRating().toString());","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"lohtianwei"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid Rating\");","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"lohtianwei"},"content":"        if (epp.getPrivateRating() !\u003d null) {","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"lohtianwei"},"content":"            rating.setPrivate(person.getRating().isPrivate());","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"lohtianwei"},"content":"            rating.togglePrivacy();","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"lohtianwei"},"content":"            rating.setPrivate(person.getRating().isPrivate());","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"lohtianwei"},"content":"        return rating;","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"lohtianwei"},"content":"    public Index getIndex() {","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"lohtianwei"},"content":"        return index;","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacy getEpp() {","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"lohtianwei"},"content":"        return epp;","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"lohtianwei"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"lohtianwei"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"lohtianwei"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lohtianwei"},"content":"            return true;","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"lohtianwei"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"lohtianwei"},"content":"        if (!(other instanceof TogglePrivacyCommand)) {","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"lohtianwei"},"content":"            return false;","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"lohtianwei"},"content":"        // state check","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand e \u003d (TogglePrivacyCommand) other;","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"lohtianwei"},"content":"        return index.equals(e.index)","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"lohtianwei"},"content":"                \u0026\u0026 epp.equals(e.epp);","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"lohtianwei"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"lohtianwei"},"content":"     * corresponding field value of the person.","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"lohtianwei"},"content":"    public static class EditPersonPrivacy {","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privatePhone;","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privateEmail;","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privateAddress;","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privateRemark;","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"lohtianwei"},"content":"        private Boolean privateRating;","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"lohtianwei"},"content":"        public EditPersonPrivacy() {}","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"lohtianwei"},"content":"        /**","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"lohtianwei"},"content":"         * Copy constructor.","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"lohtianwei"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"lohtianwei"},"content":"         */","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"lohtianwei"},"content":"        public EditPersonPrivacy (EditPersonPrivacy toCopy) {","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"lohtianwei"},"content":"            this.privateAddress \u003d toCopy.privateAddress;","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"lohtianwei"},"content":"            this.privateEmail \u003d toCopy.privateEmail;","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"lohtianwei"},"content":"            this.privatePhone \u003d toCopy.privatePhone;","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"lohtianwei"},"content":"            this.privateRemark \u003d toCopy.privateRemark;","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"lohtianwei"},"content":"            this.privateRating \u003d toCopy.privateRating;","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivatePhone(boolean privatePhone) {","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"lohtianwei"},"content":"            this.privatePhone \u003d privatePhone;","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivatePhone() {","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"lohtianwei"},"content":"            return privatePhone;","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivateEmail(boolean privateEmail) {","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"lohtianwei"},"content":"            this.privateEmail \u003d privateEmail;","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivateEmail() {","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"lohtianwei"},"content":"            return privateEmail;","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivateAddress(boolean privateAddress) {","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"lohtianwei"},"content":"            this.privateAddress \u003d privateAddress;","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivateAddress() {","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"lohtianwei"},"content":"            return privateAddress;","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivateRemark(boolean privateRemark) {","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"lohtianwei"},"content":"            this.privateRemark \u003d privateRemark;","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivateRemark() {","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"lohtianwei"},"content":"            return privateRemark;","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"lohtianwei"},"content":"        public void setPrivateRating(boolean privateRating) {","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"lohtianwei"},"content":"            this.privateRating \u003d privateRating;","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"lohtianwei"},"content":"        public Boolean getPrivateRating() {","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"lohtianwei"},"content":"            return privateRating;","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"lohtianwei"},"content":"        /**","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"lohtianwei"},"content":"         *","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"lohtianwei"},"content":"         * @return true if at least one field is not null","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"lohtianwei"},"content":"         */","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"lohtianwei"},"content":"        public boolean anyNonNullField() {","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"lohtianwei"},"content":"            return CollectionUtil.isAnyNonNull(this.privateAddress, this.privateEmail, this.privatePhone,","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"lohtianwei"},"content":"                    this.privateRating, this.privateRemark);","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"lohtianwei"},"content":"        public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"lohtianwei"},"content":"            // short circuit if same object","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"lohtianwei"},"content":"            if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"lohtianwei"},"content":"                return true;","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"lohtianwei"},"content":"            // instanceof handles nulls","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"lohtianwei"},"content":"            if (!(other instanceof EditPersonPrivacy)) {","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"lohtianwei"},"content":"                return false;","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"lohtianwei"},"content":"            // state check","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"lohtianwei"},"content":"            EditPersonPrivacy e \u003d (EditPersonPrivacy) other;","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"lohtianwei"},"content":"            return getPrivatePhone().equals(e.getPrivatePhone())","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"lohtianwei"},"content":"                    \u0026\u0026 getPrivateAddress().equals(e.getPrivateAddress())","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"lohtianwei"},"content":"                    \u0026\u0026 getPrivateEmail().equals(e.getPrivateEmail())","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"lohtianwei"},"content":"                    \u0026\u0026 getPrivateRemark().equals(e.getPrivateRemark())","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"lohtianwei"},"content":"                    \u0026\u0026 getPrivateRating().equals(e.getPrivateRating());","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":394,"-":2}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedNoParamEvent;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.UndoTeamsEvent;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Undo the previous {@code UndoableCommand}.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UndoCommand extends Command {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    public static final String COMMAND_ALIAS \u003d \"u\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo success!\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to undo!\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireAllNonNull(model, undoRedoStack);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!undoRedoStack.canUndo()) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_FAILURE);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        undoRedoStack.popUndo().undo();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // @@author Codee","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new UndoTeamsEvent());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        EventsCenter.getInstance().post(new PersonDetailsChangedNoParamEvent());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // @@author","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setData(Model model, CommandHistory commandHistory, UndoRedoStack undoRedoStack) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.undoRedoStack \u003d undoRedoStack;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":3,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.HighlightSelectedTeamEvent;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * View a team identified using it\u0027s team name from the address book.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ViewCommand extends Command {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_ALIAS \u003d \"vt\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Views the team identified by the team name.\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: TEAM_NAME\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" Arsenal\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PARAMETERS \u003d \"TEAM_NAME\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_VIEW_TEAM_SUCCESS \u003d \"Viewing Team: %1$s\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final TeamName targetTeam;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ViewCommand(TeamName targetTeam) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(targetTeam);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetTeam \u003d targetTeam;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute() throws CommandException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            EventsCenter.getInstance().post(new HighlightSelectedTeamEvent(targetTeam.toString()));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(targetTeam);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (TeamNotFoundException tnfe) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_TEAM_NOT_FOUND);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_TEAM_SUCCESS, targetTeam.toString()));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.targetTeam.equals(((ViewCommand) other).targetTeam)); // state check","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AssignCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.ChangeThemeCommand;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CreateCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.ExitCommand;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.FindCommand;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.HistoryCommand;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.KeyCommand;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemoveCommand;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RenameCommand;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.SelectCommand;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.SetCommand;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.SortCommand;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ViewCommand;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParser {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    public static final String MESSAGE_RESTRICTED \u003d \"Not allowed! Please unlock MTM before execution.\\n\"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"            + KeyCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    public Command parseCommand(String userInput, boolean lockState) throws ParseException {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"        Command res \u003d lowLevelCommand(commandWord, arguments);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        if (res !\u003d null) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"            return res;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        if (lockState) {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(MESSAGE_RESTRICTED);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        switch (commandWord) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"        case AddCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"        case EditCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case SelectCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"        case SelectCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new SelectCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"        case DeleteCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"        case ClearCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ClearCommand();","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case RemarkCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case RemarkCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new RemarkCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case HistoryCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"        case HistoryCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new HistoryCommand();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case CreateCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case CreateCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new CreateCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        case RemoveCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        case RemoveCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return new RemoveCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        case AssignCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        case AssignCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return new AssignCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        case RenameCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        case RenameCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return new RenameCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        case UndoCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"        case UndoCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return new UndoCommand();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        case RedoCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"        case RedoCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return new RedoCommand();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"codeeong"},"content":"        case SetCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"codeeong"},"content":"        case SetCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"codeeong"},"content":"            return new SetCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        case TogglePrivacyCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        case TogglePrivacyCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return new TogglePrivacyCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        default:","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"     * Checks for low level command words or aliases that do not violate restriction of a locked MTM.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"     * Else, control is returned back to original parseCommand method.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"     * @param commandWord","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"     * @param arguments","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"    private Command lowLevelCommand(String commandWord, String arguments) throws ParseException {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"        switch(commandWord) {","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"        case ChangeThemeCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"        case ChangeThemeCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"            return new ChangeThemeCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lohtianwei"},"content":"        case FindCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lohtianwei"},"content":"        case FindCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lohtianwei"},"content":"            return new FindCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lohtianwei"},"content":"        case ListCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lohtianwei"},"content":"        case ListCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lohtianwei"},"content":"            return new ListCommand();","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lohtianwei"},"content":"        case KeyCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lohtianwei"},"content":"        case KeyCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lohtianwei"},"content":"            return new KeyCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lohtianwei"},"content":"        case ViewCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lohtianwei"},"content":"        case ViewCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"            return new ViewCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lohtianwei"},"content":"        case ExitCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lohtianwei"},"content":"            return new ExitCommand();","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lohtianwei"},"content":"        case HelpCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lohtianwei"},"content":"            return new HelpCommand();","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lohtianwei"},"content":"        case SortCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lohtianwei"},"content":"        case SortCommand.COMMAND_ALIAS:","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lohtianwei"},"content":"            return new SortCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lohtianwei"},"content":"            return null;","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":82,"codeeong":6,"-":95}},{"path":"src/main/java/seedu/address/logic/parser/ChangeThemeCommandParser.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.ChangeThemeCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.ChangeThemeCommand;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":" * Parses input arguments and creates a new ThemeCommand object.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommandParser implements Parser\u003cChangeThemeCommand\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"     * Parses the given (@code String) in the context of a ThemeCommand.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"     * @return ThemeCommand Object for execution","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    public ChangeThemeCommand parse(String userInput) throws ParseException {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"        if (userInput.length() \u003d\u003d 0) {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"        return new ChangeThemeCommand(userInput);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":26}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    public static final Prefix PREFIX_TAG_COLOUR \u003d new Prefix(\"tc/\");","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TEAM_NAME \u003d new Prefix(\"tm/\");","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"ra/\");","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_JERSEY_NUMBER \u003d new Prefix(\"j/\");","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"po/\");","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_AVATAR \u003d new Prefix(\"av/\");","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"    public static final Prefix PREFIX_PASSWORD \u003d new Prefix(\"pw/\");","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":1,"codeeong":1,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/KeyCommandParser.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.KeyCommand;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":" * Parses input and creates KeyCommand object with password provided","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"public class KeyCommandParser implements Parser\u003cKeyCommand\u003e {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"     * Parses the given {@code String} of arguments in the context of the KeyCommand","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"     * and returns a KeyCommand object for execution.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public KeyCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"        String trimmedArgs \u003d args.trim();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"        /*if (trimmedArgs.isEmpty()) {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, KeyCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"        }*/","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"        String[] argKeywords \u003d trimmedArgs.split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"        if (argKeywords.length \u003e 1) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, KeyCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        return new KeyCommand(argKeywords[0]);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":31}},{"path":"src/main/java/seedu/address/logic/parser/SetCommandParser.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG_COLOUR;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import java.util.stream.Stream;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.SetCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":" * This class is to check whether Set Command was input correctly","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"public class SetCommandParser implements Parser\u003cSetCommand\u003e {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"     * Parses the given {@code String} of arguments in the context of the SetCommand","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"     * and returns an SetCommand object for execution.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    public SetCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"        ArgumentMultimap argMultimap \u003d","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG, PREFIX_TAG_COLOUR);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG, PREFIX_TAG_COLOUR)","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        try {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"            Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"            String colour \u003d ParserUtil.parseTagColour(argMultimap.getValue(PREFIX_TAG_COLOUR).get());","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"            if (!tag.isValidTagColour(colour)) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"                throw new ParseException(","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"            return new SetCommand(tag, colour);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        } catch (IllegalValueException ive) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"            throw new ParseException(","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"     * {@code ArgumentMultimap}.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":56}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.SortCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":" * Parses input arguments and creates a new SortCommand object with field and order parameters provided","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    public static final List\u003cString\u003e ACCEPTED_FIELDS \u003d new ArrayList\u003c\u003e(Arrays.asList(","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"            \"name\", \"email\", \"address\", \"rating\", \"jersey\", \"pos\"));","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    public static final List\u003cString\u003e ACCEPTED_ORDERS \u003d new ArrayList\u003c\u003e(Arrays.asList(","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"            \"asc\", \"desc\"));","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    public SortCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"        String trimmedArgs \u003d args.trim();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"        if (trimmedArgs.isEmpty()) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        //eliminates spaces","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        String[] argKeywords \u003d trimmedArgs.split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"        //accounts for caps entries","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"        for (int i \u003d 0; i \u003c argKeywords.length; i++) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"            argKeywords[i] \u003d argKeywords[i].toLowerCase();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        if (argKeywords.length !\u003d 2) {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        if (!ACCEPTED_FIELDS.contains(argKeywords[0])) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        if (!ACCEPTED_ORDERS.contains(argKeywords[1])) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        return new SortCommand(argKeywords[0], argKeywords[1]);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":51}},{"path":"src/main/java/seedu/address/logic/parser/TogglePrivacyCommandParser.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand.EditPersonPrivacy;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":" * Parses input arguments and creates a new TogglePrivacyCommand object","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"public class TogglePrivacyCommandParser implements Parser\u003cTogglePrivacyCommand\u003e {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"     * Parses the given {@code String} of arguments in the context of the TogglePrivacyCommand","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"     * and returns an TogglePrivacyCommand object for execution.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    public TogglePrivacyCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        requireNonNull(args);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        ArgumentMultimap argMultimap \u003d","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"                ArgumentTokenizer.tokenize(args,","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"                        PREFIX_REMARK, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_RATING);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        Index index;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        try {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        } catch (IllegalValueException ive) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TogglePrivacyCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacy();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivatePhone(false);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateAddress(false);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateEmail(false);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRemark(false);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        if (argMultimap.getValue(PREFIX_RATING).isPresent()) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRating(false);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"        if (!epp.anyNonNullField()) {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"            throw new ParseException(TogglePrivacyCommand.MESSAGE_NO_FIELDS);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        return new TogglePrivacyCommand(index, epp);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":67,"-":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.UniqueTagList;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.team.UniqueTeamList;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .equals comparison)","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final UniqueTagList tags;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final UniqueTeamList teams;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /*","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is an non-static initialization block, sometimes used to avoid duplication","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *   among constructors.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new UniqueTagList();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        teams \u003d new UniqueTeamList();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook() {}","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons and Tags in the {@code toBeCopied}","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// list overwrite operations","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags.setTags(tags);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setTeams(List\u003cTeam\u003e teams) throws DuplicateTeamException {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.teams.setTeams(teams);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setTags(new HashSet\u003c\u003e(newData.getTagList()));","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e syncedPersonList \u003d newData.getPersonList().stream()","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .map(this::syncWithMasterTagList)","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cTeam\u003e syncedTeamList \u003d newData.getTeamList();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            setPersons(syncedPersonList);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            setTeams(syncedTeamList);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBooks should not have duplicate persons\");","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DuplicateTeamException e) {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"MTM should not have duplicate teams\");","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// person-level operations","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Also checks the new person\u0027s tags and updates {@link #tags} with any new tags found,","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * and updates the Tag objects in the person to point to those in {@link #tags}.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if an equivalent person already exists.","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person person \u003d syncWithMasterTagList(p);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // TODO: the tags master list will be updated even though the below line fails.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // This can cause the tags master list to have additional tags that are not tagged to any person","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // in the person list.","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.add(person);","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code AddressBook}\u0027s tag list will be updated with the tags of {@code editedPerson}.","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if updating the person\u0027s details causes the person to be equivalent to","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *      another existing person in the list.","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list.","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #syncWithMasterTagList(Person)","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person syncedEditedPerson \u003d syncWithMasterTagList(editedPerson);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // TODO: the tags master list will be updated even though the below line fails.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // This can cause the tags master list to have additional tags that are not tagged to any person","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // in the person list.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!editedPerson.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            teams.getTeam(editedPerson.getTeamName()).setPerson(target, editedPerson);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        persons.setPerson(target, syncedEditedPerson);","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        removeUnusedTags();","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"    public void sortPlayersBy(String field, String order) throws NoPlayerException {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"        persons.sortBy(field, order);","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"    //@@author","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *  Updates the master tag list to include tags in {@code person} that are not in the list.","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *  @return a copy of this {@code person} such that every tag in this person points to a Tag object in the master","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *  list.","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private Person syncWithMasterTagList(Person person) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final UniqueTagList personTags \u003d new UniqueTagList(person.getTags());","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        tags.mergeFrom(personTags);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Create map with values \u003d tag object references in the master list","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // used for checking person tag references","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Map\u003cTag, Tag\u003e masterTagObjects \u003d new HashMap\u003c\u003e();","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        tags.forEach(tag -\u003e masterTagObjects.put(tag, tag));","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // Rebuild the list of person tags to point to the relevant tags in the master tag list.","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e correctTagReferences \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        personTags.forEach(tag -\u003e correctTagReferences.add(masterTagObjects.get(tag)));","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return new Person(","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"                person.getName(), person.getPhone(), person.getEmail(), person.getAddress(), person.getRemark(),","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"                person.getTeamName(), correctTagReferences, person.getRating(), person.getPosition(),","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if the {@code key} is not in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public boolean removePerson(Person key) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (persons.remove(key)) {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    //// tag-level operations","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void addTag(Tag t) throws UniqueTagList.DuplicateTagException {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        tags.add(t);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"codeeong"},"content":"     * Sets the colour of {@code tag}.","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"codeeong"},"content":"    public void setTagColour(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"codeeong"},"content":"        for (Tag t : tags) {","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"codeeong"},"content":"            if (t.getTagName().equals(tag.getTagName())) {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"codeeong"},"content":"                t.changeTagColour(colour);","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Removes {@code tag} from all persons in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void removeTag(Tag tag) {","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            for (Person person : persons) {","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"                removeTagFromPerson(tag, person);","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Removes {@code tag} from {@code person} in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if the {@code person} is not in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private void removeTagFromPerson(Tag tag, Person person) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(person.getTags());","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (!newTags.remove(tag)) {","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return;","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Person newPerson \u003d","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"                        person.getRemark(), person.getTeamName(), newTags, person.getRating(), person.getPosition(),","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"                        person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            updatePerson(person, newPerson);","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate person \"","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    + \"after updating person\u0027s tag.\");","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * Removes all {@code tag} that are not in used by any {@code Person} in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private void removeUnusedTags() {","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagsInPersons \u003d persons.asObservableList().stream()","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                .map(Person::getTags)","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .flatMap(Set::stream)","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        tags.setTags(tagsInPersons);","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    //@@author jordancjq","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Creates a team in the manager.","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * @throws DuplicateTeamException if an equivalent team already exists.","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void createTeam(Team t) throws DuplicateTeamException {","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        teams.add(t);","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"     * Assigns a {@code person} to a {@code team}.","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * @throws TeamNotFoundException if the {@code team} is not found in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void assignPersonToTeam(Person person, TeamName teamName) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        teams.assignPersonToTeam(person, teams.getTeam(teamName));","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!person.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"            try {","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"                removePersonFromTeam(person, person.getTeamName());","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"            } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"Impossible: Team should contain of this person\");","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Person newPersonWithTeam \u003d","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"                        person.getRemark(), teamName, person.getTags(), person.getRating(), person.getPosition(),","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"                        person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (!person.getTeamName().equals(newPersonWithTeam.getTeamName())) {","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"            try {","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"                updatePerson(person, newPersonWithTeam);","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"            } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"AddressBook should not have duplicate person after assigning team\");","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"            } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"     * Unassigns a {@code person} from team.","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * @throws TeamNotFoundException if the {@code teamName} in {@code person} is {@code UNSPECIFIED_FIELD}.","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public void unassignPersonFromTeam(Person person) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"        if (person.getTeamName().toString().equals(UNSPECIFIED_FIELD)) {","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"            throw new TeamNotFoundException(person.getName().toString());","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Person newPersonWithTeam \u003d","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"                        person.getRemark(), new TeamName(UNSPECIFIED_FIELD), person.getTags(), person.getRating(),","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"                        person.getPosition(), person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"            removePersonFromTeam(person, person.getTeamName());","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: Team should contain of this person\");","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"            updatePerson(person, newPersonWithTeam);","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate person after assigning team\");","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"     * Immediately add a {@code person} to a {@code team}.","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * @throws TeamNotFoundException if the {@code team} is not found in this {@code AddressBook}.","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"    public void addPersonToTeam(Person person, TeamName teamName) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        teams.assignPersonToTeam(person, teams.getTeam(teamName));","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"     * Removes a {@code person} from a {@code team}.","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"    private void removePersonFromTeam(Person person, TeamName teamName) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"            teams.removePersonFromTeam(person, teams.getTeam(teamName));","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * Removes a {@code team} from {@code teams}.","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public void removeTeam(TeamName teamName) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"        if (!teams.contains(teamName)) {","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"            throw new TeamNotFoundException();","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Team teamToRemove \u003d teams.getTeam(teamName);","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"        for (Person person : teamToRemove) {","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"            removeTeamFromPerson(person);","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"        teams.remove(teamToRemove);","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * Removes {@code teamName} from {@code person} in this {@code Team}.","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private void removeTeamFromPerson(Person person) {","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"        Person personWithRemoveTeam \u003d","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"                        person.getRemark(), new TeamName(UNSPECIFIED_FIELD), person.getTags(), person.getRating(),","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"                        person.getPosition(), person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"            persons.setPerson(person, personWithRemoveTeam);","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate person after assigning team\");","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"     * Renames {@code Team} with {@code updatedTeamName}.","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"     * @return","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"    public void renameTeam(Team targetTeam, TeamName updatedTeamName) {","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"            List\u003cPerson\u003e renameTeamPersonList \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"            for (Person person : persons) {","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"                if (person.getTeamName().equals(targetTeam.getTeamName())) {","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"                    renameTeamPersonList.add(renameTeamInPerson(person, updatedTeamName, targetTeam));","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"                }","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"            Team updatedTeam \u003d new Team(updatedTeamName, renameTeamPersonList);","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"            teams.setTeam(targetTeam, updatedTeam);","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"        } catch (DuplicateTeamException dte) {","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate team after renaming\");","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"        } catch (TeamNotFoundException tnfe) {","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: Teams should contain this team\");","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"     * Renames {@code teamName} in {@code person} with {@code teamName}.","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"    private Person renameTeamInPerson(Person person, TeamName teamName, Team targetTeam) {","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"        Person personWithRenameTeam \u003d","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"                new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"                        person.getRemark(), teamName, person.getTags(), person.getRating(),","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"                        person.getPosition(), person.getJerseyNumber(), person.getAvatar());","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"            persons.setPerson(person, personWithRenameTeam);","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"            return personWithRenameTeam;","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"AddressBook should not have duplicate person after assigning team\");","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"        } catch (PersonNotFoundException pnfe) {","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Impossible: AddressBook should contain this person\");","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"    //// util methods","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"        return persons.asObservableList().size() + \" persons, \" + tags.asObservableList().size() +  \" tags\";","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"        // TODO: refine later","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"        return persons.asObservableList();","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"        return tags.asObservableList();","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTeam\u003e getTeamList() {","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"        return teams.asObservableList();","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.persons.equals(((AddressBook) other).persons)","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.tags.equalsOrderInsensitive(((AddressBook) other).tags));","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"        return Objects.hash(persons, tags);","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":7,"codeeong":13,"-":431}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** Clears existing backing model and replaces with the provided new data. */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void resetData(ReadOnlyAddressBook newData);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /** Deletes the given person. */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void deletePerson(Person target) throws PersonNotFoundException;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /** Adds the given person */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void addPerson(Person person) throws DuplicatePersonException;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if updating the person\u0027s details causes the person to be equivalent to","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *      another existing person in the list.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code teamName}.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(TeamName targetTeam) throws TeamNotFoundException;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"     * Sorts players in address book by field in asc or desc order","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"     * @param field","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"     * @param order","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    void sortPlayers(String field, String order) throws NoPlayerException;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"    boolean getLockState();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"    UserPrefs getUserPrefs();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"    /** Locks address book from model*/","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"    void lockAddressBookModel();","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"    /** Unlocks address book from model*/","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"    void unlockAddressBookModel();","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /** Removes the given {@code tag} from all {@code Person}s. */","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void deleteTag(Tag tag);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Create the given team */","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void createTeam(Team team) throws DuplicateTeamException;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Assign person to team */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void assignPersonToTeam(Person person, TeamName teamName)","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException;","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /** Unassign person from team */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void unassignPersonFromTeam(Person person) throws TeamNotFoundException;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Removes the given team */","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void removeTeam(TeamName teamName) throws TeamNotFoundException;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /** Renames the given team */","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void renameTeam(Team targetTeam, TeamName teamName);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"    /** sets the given {@code tag} to color. */","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"    boolean setTagColour(Tag tag, String colour);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"    /** Returns an unmodifiable view of the team list */","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"    ObservableList\u003cTeam\u003e getInitTeamList();","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":18,"codeeong":5,"-":78}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.ComponentManager;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.model.AddressBookChangedEvent;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.RemoveSelectedTeamEvent;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" * All changes to any model should be synchronized.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ModelManager extends ComponentManager implements Model {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"    private final UserPrefs userPrefs;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, UserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        this.userPrefs \u003d userPrefs;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBook;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /** Raises an event to indicate the model has changed */","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void indicateAddressBookChanged() {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        raise(new AddressBookChangedEvent(addressBook));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public synchronized void deletePerson(Person target) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public synchronized void addPerson(Person person) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        addressBook.updatePerson(target, editedPerson);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"    @Override","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"    public void sortPlayers(String field, String order) throws NoPlayerException {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"        addressBook.sortPlayersBy(field, order);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lohtianwei"},"content":"    public UserPrefs getUserPrefs() {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lohtianwei"},"content":"        return userPrefs;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"    public void lockAddressBookModel() {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"        getUserPrefs().lockAddressBook();","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"    public void unlockAddressBookModel() {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"        getUserPrefs().unlockAddressBook();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"    public boolean getLockState() {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"        return getUserPrefs().getAddressBookLockState();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"    //@@author","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void deleteTag(Tag tag) {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.removeTag(tag);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"codeeong"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //@@author jordancjq","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public synchronized void createTeam(Team team) throws DuplicateTeamException {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.createTeam(team);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public synchronized void assignPersonToTeam(Person person, TeamName teamName) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        addressBook.assignPersonToTeam(person, teamName);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public synchronized void unassignPersonFromTeam(Person person) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        addressBook.unassignPersonFromTeam(person);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public synchronized void removeTeam(TeamName teamName) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(teamName);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        raise(new RemoveSelectedTeamEvent(teamName));","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        addressBook.removeTeam(teamName);","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public synchronized void renameTeam(Team targetTeam, TeamName updatedTeamName) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireAllNonNull(targetTeam, updatedTeamName);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        addressBook.renameTeam(targetTeam, updatedTeamName);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean setTagColour(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        ObservableList\u003cTag\u003e allTags \u003d addressBook.getTagList();","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        boolean isTagValid \u003d false;","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (Tag t : allTags) {","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            if (t.getTagName().equals(tag.getTagName())) {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                isTagValid \u003d true;","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                break;","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!isTagValid) {","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        addressBook.setTagColour(tag, colour);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        indicateAddressBookChanged();","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return isTagValid;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"codeeong"},"content":"    public ObservableList\u003cTeam\u003e getInitTeamList() {","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"codeeong"},"content":"        return addressBook.getTeamList();","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * {@code addressBook}","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(filteredPersons);","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    //@@author jordancjq","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(TeamName targetTeam) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        requireNonNull(targetTeam);","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        List\u003cTeam\u003e teamList \u003d addressBook.getTeamList();","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (teamList.stream().anyMatch(target -\u003e target.getTeamName().equals(targetTeam))) {","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            filteredPersons.setPredicate(t -\u003e t.getTeamName().equals(targetTeam));","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new TeamNotFoundException();","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // state check","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":28,"codeeong":7,"-":197}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"import java.nio.charset.StandardCharsets;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import com.google.common.hash.Hashing;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class UserPrefs {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    private String addressBookFilePath \u003d \"data/myteammanager.xml\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    private String addressBookName \u003d \"MyTeamManager\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    private String addressBookTheme \u003d \"DarkTheme.css\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    private boolean addressBookLockState \u003d false;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"    private String addressBookHashedPass \u003d Hashing.sha256()","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"            .hashString(\"ilikesports\", StandardCharsets.UTF_8).toString();","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.setGuiSettings(500, 500, 0, 0);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return guiSettings \u003d\u003d null ? new GuiSettings() : guiSettings;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void updateLastUsedGuiSetting(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setGuiSettings(double width, double height, int x, int y) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        guiSettings \u003d new GuiSettings(width, height, x, y);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getAddressBookFilePath() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(String addressBookFilePath) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String getAddressBookName() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return addressBookName;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public void lockAddressBook() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        this.addressBookLockState \u003d true;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public void unlockAddressBook() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        this.addressBookLockState \u003d false;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"    public String getAddressBookHashedPass() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        return addressBookHashedPass;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    public boolean getAddressBookLockState() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        return this.addressBookLockState;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookName(String addressBookName) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.addressBookName \u003d addressBookName;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String getAddressBookTheme() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return addressBookTheme;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"    public void setAddressBookTheme(String addressBookTheme) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"        this.addressBookTheme \u003d addressBookTheme;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Objects.equals(guiSettings, o.guiSettings)","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(addressBookFilePath, o.addressBookFilePath)","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"                \u0026\u0026 Objects.equals(addressBookName, o.addressBookName)","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"                \u0026\u0026 Objects.equals(addressBookHashedPass, o.addressBookHashedPass)","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"                \u0026\u0026 Objects.equals(addressBookLockState, o.addressBookLockState);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, addressBookName);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings.toString());","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        sb.append(\"\\nAddressBook name : \" + addressBookName);","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"        sb.append(\"\\nPassword: \" + addressBookHashedPass);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"        sb.append(\"\\nLock State: \" + Boolean.toString(this.addressBookLockState));","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return sb.toString();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":28,"codeeong":9,"-":80}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADDRESS_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Person addresses can take any values, and it should not be blank\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param address A valid address.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Address(String address) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(address);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_ADDRESS_CONSTRAINTS);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.value \u003d address;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d false;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"    public Address(String address, boolean isPrivate) {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        this(address);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid person email.","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return test.matches(ADDRESS_VALIDATION_REGEX) || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return \"\u003cPrivate Address\u003e\";","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Address) other).value)); // state check","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":8,"-":73}},{"path":"src/main/java/seedu/address/model/person/Avatar.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.StandardCopyOption;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"//@@author lithiumlkid","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents a Player\u0027s avatar in the address book. Contains filepath to avatar image file.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAvatar(String)}","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Avatar {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_AVATAR_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"Please specify the absolute filepath for the avatar image eg. av/C:\\\\image.png\\n (for Windows), \"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"av//User/username/path/to/image.jpg (for MacOS). \"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Image file should be 200x200 and in jpg or png format\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String AVATAR_VALIDATION_PATTERN \u003d \"([^\\\\s]+(\\\\.(?i)(jpg|png))$)\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private String value;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs an {@code Avatar}.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param avatar A valid avatar.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Avatar(String avatar) {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(avatar);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        checkArgument(isValidAvatar(avatar), MESSAGE_AVATAR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.value \u003d avatar;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid player\u0027s avatar.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static boolean isValidAvatar(String test) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Pattern pattern \u003d Pattern.compile(AVATAR_VALIDATION_PATTERN);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d pattern.matcher(test);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return matcher.matches() || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /*","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Avatar // instanceof handles nulls","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Avatar) other).value)); // state check","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    */","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Copies the image file from file path entered into images/ and renames it as [name].png","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * and saves the file path in value","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param player player\u0027s avatar image filepath string","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IOException  thrown when file not found","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setFilePath(String player) throws IOException {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (value.equals(\"\u003cUNSPECIFIED\u003e\")) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final File file \u003d new File(value);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Path dest \u003d new File(\"images/\" + player.replaceAll(\"\\\\s+\", \"\") + \".png\").toPath();","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Files.createDirectories(Paths.get(\"images\")); // Creates missing directories if any","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.copy(file.toPath(), dest, StandardCopyOption.REPLACE_EXISTING);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.value \u003d dest.toString();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String getValue() {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void setUpPlaceholderForTest() {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"            Files.copy(Avatar.class.getResourceAsStream(\"/images/placeholder_test.png\"),","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"                    Paths.get(\"images/placeholder_test.png\"), StandardCopyOption.REPLACE_EXISTING);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            LogsCenter.getLogger(Avatar.class).warning(\"placeholder image file missing\");","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                || (other instanceof Avatar // instanceof handles nulls","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Avatar) other).value)); // state check","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":108}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static  final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EMAIL_CONSTRAINTS \u003d \"Person emails should be of the format local-part@domain \"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String EMAIL_VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email(String email) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(email);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_EMAIL_CONSTRAINTS);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.value \u003d email;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d false;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"    public Email(String email, boolean isPrivate) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"        this(email);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid person email.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return test.matches(EMAIL_VALIDATION_REGEX);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return \"\u003cPrivate Email\u003e\";","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Email) other).value)); // state check","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":8,"-":81}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PHONE_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers can only contain numbers, and should be at least 3 digits long\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String PHONE_VALIDATION_REGEX \u003d \"\\\\d{3,}\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_PHONE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.value \u003d phone;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d false;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"    public Phone(String phone, boolean isPrivate) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"        this(phone);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid person phone number.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(PHONE_VALIDATION_REGEX) || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return \"\u003cPrivate Phone\u003e\";","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Phone) other).value)); // state check","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":8,"-":68}},{"path":"src/main/java/seedu/address/model/person/Rating.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"//@@author lithiumlkid","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Player\u0027s rating in the address book.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRating(String)}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Rating {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_RATING_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Player\u0027s rating should be an integer from 0 - 5.\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String RATING_VALIDATION_REGEX \u003d \"[0-5]\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Rating}.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param rating A valid rating.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Rating(String rating) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(rating);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidRating(rating), MESSAGE_RATING_CONSTRAINTS);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.value \u003d rating;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"    public Rating(String rating, boolean isPrivate) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        this(rating);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid player\u0027s rating.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidRating(String test) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return test.matches(RATING_VALIDATION_REGEX) || test.equals(UNSPECIFIED_FIELD);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"            return \"\u003cPrivate Rating\u003e\";","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                || (other instanceof Rating // instanceof handles nulls","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Rating) other).value)); // state check","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":21,"-":56}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s remark in the address book.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is always valid}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Remark {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_REMARK_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Remark can contain any values, can even be blank\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private boolean isPrivate;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Remark}","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param remark Any remark","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Remark(String remark) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.value \u003d remark;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d false;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"    public Remark(String remark, boolean isPrivate) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        this(remark);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"        this.setPrivate(isPrivate);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (isPrivate) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return \"\u003cPrivate Remarks\u003e\";","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"    public boolean isPrivate() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        return isPrivate;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void togglePrivacy() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate ? false : true;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPrivate(boolean isPrivate) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.isPrivate \u003d isPrivate;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Remark // instanceof handles nulls","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.value.equals(((Remark) other).value)); // state check","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":8,"-":57}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import java.util.Collection;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import java.util.Comparator;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import java.util.Iterator;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#equals(Object)","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see CollectionUtil#elementsAreUnique(Collection)","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.contains(toCheck);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if the person to add is a duplicate of an existing person in the list.","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DuplicatePersonException if the replacement is equivalent to another existing person in the list.","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if {@code target} could not be found in the list.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException, PersonNotFoundException {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!target.equals(editedPerson) \u0026\u0026 internalList.contains(editedPerson)) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws PersonNotFoundException if no such person could be found in the list.","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean remove(Person toRemove) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final boolean personFoundAndDeleted \u003d internalList.remove(toRemove);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personFoundAndDeleted) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return personFoundAndDeleted;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.internalList.setAll(replacement.internalList);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final UniquePersonList replacement \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        for (final Person person : persons) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            replacement.add(person);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        setPersons(replacement);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asObservableList() {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(internalList);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"     * Sorts players by selected field in asc or desc order.","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"     * @return","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"    public void sortBy(String field, String order) throws NoPlayerException {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"        if (internalList.size() \u003c 1) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"            throw new NoPlayerException();","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e comparator \u003d null;","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e nameComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"                return p1.getName().fullName.compareTo(p2.getName().fullName);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e jerseyComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lohtianwei"},"content":"                return p1.getJerseyNumber().value.compareTo(p2.getJerseyNumber().value);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e ratingComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lohtianwei"},"content":"                return p1.getRating().toString().compareTo(p2.getRating().toString());","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e posComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"                return p1.getPosition().value.compareTo(p2.getPosition().value);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e emailComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lohtianwei"},"content":"                return p1.getEmail().toString().compareTo(p2.getEmail().toString());","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"lohtianwei"},"content":"        Comparator\u003cPerson\u003e addressComparator \u003d new Comparator\u003cPerson\u003e() {","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"lohtianwei"},"content":"            @Override","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lohtianwei"},"content":"            public int compare(Person p1, Person p2) {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lohtianwei"},"content":"                return p1.getAddress().toString().compareTo(p2.getAddress().toString());","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"lohtianwei"},"content":"        };","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"lohtianwei"},"content":"        switch (field) {","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"lohtianwei"},"content":"        case \"name\":","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d nameComparator;","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"lohtianwei"},"content":"        case \"jersey\":","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d jerseyComparator;","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"lohtianwei"},"content":"        case \"pos\":","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d posComparator;","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"lohtianwei"},"content":"        case \"rating\":","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d ratingComparator;","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lohtianwei"},"content":"        case \"email\":","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d emailComparator;","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lohtianwei"},"content":"        case \"address\":","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"lohtianwei"},"content":"            comparator \u003d addressComparator;","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid field parameter entered...\\n\");","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"lohtianwei"},"content":"        switch (order) {","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"lohtianwei"},"content":"        case \"asc\":","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"lohtianwei"},"content":"            Collections.sort(internalList, comparator);","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"lohtianwei"},"content":"        case \"desc\":","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"lohtianwei"},"content":"            Collections.sort(internalList, Collections.reverseOrder(comparator));","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lohtianwei"},"content":"            throw new AssertionError(\"Invalid field parameter entered...\\n\");","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"lohtianwei"},"content":"    //@@author","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return internalList.iterator();","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"                        \u0026\u0026 this.internalList.equals(((UniquePersonList) other).internalList));","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":105,"-":118}},{"path":"src/main/java/seedu/address/model/person/exceptions/NoPlayerException.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.model.person.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":" * Singals that the operation is unable to sort due to no players in book.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"public class NoPlayerException extends Exception {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":7}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_TAG_CONSTRAINTS \u003d \"Tags names should be a string\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    public static final String MESSAGE_TAG_COLOUR_CONSTRAINTS \u003d \"Tag colours should be one of these colours:\"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"        + \"teal, red, yellow, blue, orange, brown, green, pink, black, grey\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String TAG_VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    private static final String[] TAG_COLOR_STYLES \u003d","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"        { \"teal\", \"red\", \"yellow\", \"blue\", \"orange\", \"brown\", \"green\", \"pink\", \"black\", \"grey\" };","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String tagName;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    private String tagColour;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d \"teal\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"     * Overloaded constructor for a {@code Tag}.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"     * @param tagName A valid tag name","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"     * @param tagColour A valid tag colour.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"    public Tag(String tagName, String tagColour) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"        requireNonNull(tagName);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d tagColour;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"    public String getTagName() {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"        return this.tagName;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"     * Returns true if a given string is a valid tag name.","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"    public static boolean isValidTagName(String test) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        return test.matches(TAG_VALIDATION_REGEX);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"    public String getTagColour() {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        return this.tagColour;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"     * Changes the {@code tagColour} for {@code tagName}\u0027s label","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"    public void changeTagColour(String colour) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d colour;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"     * Returns true if a given string is a valid tag colour.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"    public static boolean isValidTagColour(String testColour) {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"        for (String tcs : TAG_COLOR_STYLES) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"            if (testColour.equals(tcs)) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"                return true;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"        return false;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.tagName.equals(((Tag) other).tagName)); // state check","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":54,"-":49}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.exceptions.DuplicateTeamException;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Aaron Ramsey\"), new Phone(\"87438807\"), new Email(\"aramsey@example.com\"),","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Remark(\"Sign him for one more year\"),","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"                new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"redCard\"), new Rating(\"3\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Hector Moruno\"), new Phone(\"99272758\"), new Email(\"hectorm@example.com\"),","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"                getTagSet(\"fastRunner\", \"goodAttitude\"), new Rating(\"1\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Cesc Fabregas\"), new Phone(\"93210283\"), new Email(\"cescfabregas@example.com\"),","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"yellowCard\"), new Rating(\"4\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Ospina\"), new Phone(\"99272758\"), new Email(\"Ospina@arsenal.com\"),","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"                    new Address(\"70 Jurong Central Circle\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\", \"goodAttitude\"), new Rating(\"1\"), new Position(\"1\"), new JerseyNumber(\"22\"),","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Cech\"), new Phone(\"93210283\"), new Email(\"cech@arsenal.com\"),","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"4\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Mertesacker\"), new Phone(\"95432223\"), new Email(\"mertesacker@arsenal.com\"),","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 430 Pasir Ris Street 33, #12-26\"), new Remark(\"\"),","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"                    new TeamName(\"Arsenal\"), getTagSet(\"injured\"),","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"23\"),","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Koscielny\"), new Phone(\"92352021\"), new Email(\"koscielny@example.com\"),","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"badAttitude\"),","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Holding\"), new Phone(\"92624417\"), new Email(\"holding@example.com\"),","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\"), new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"7\"),","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Monreal\"), new Phone(\"99272758\"), new Email(\"monreal@arsenal.com\"),","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\", \"goodAttitude\"), new Rating(\"1\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Mustafi\"), new Phone(\"93215483\"), new Email(\"mustafi@arsenal.com\"),","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"4\"), new Position(\"1\"), new JerseyNumber(\"4\"),","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Chambers\"), new Phone(\"91031282\"), new Email(\"chambers@arsenal.com\"),","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"\"),","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"                    new TeamName(\"Arsenal\"), getTagSet(\"injured\"),","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Chambers\"), new Phone(\"92492021\"), new Email(\"chambers@arsenal.com\"),","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"badAttitude\"),","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"\"),","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    new TeamName(\"Chelsea\"), getTagSet(\"injured\"),","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Irfan Fandi\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codeeong"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"                getTagSet(\"badAttitude\"),","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Mavropanos\"), new Phone(\"92624417\"), new Email(\"mavropanos@arsenal.com\"),","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"), new TeamName(\"Chelsea\"),","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"98\"),","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Kolasinac\"), new Phone(\"99272758\"), new Email(\"kolasinac@arsenal.com\"),","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"codeeong"},"content":"                    new Address(\"70 Jurong Central Circle\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\", \"goodAttitude\"), new Rating(\"1\"), new Position(\"2\"), new JerseyNumber(\"52\"),","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Mkhitaryan\"), new Phone(\"93210283\"), new Email(\"mkhitaryan@arsenal.com\"),","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"yellowCard\"), new Rating(\"4\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Wilshere\"), new Phone(\"95432223\"), new Email(\"wilshere@arsenal.com\"),","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 430 Pasir Ris Street 33, #12-26\"), new Remark(\"\"),","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"codeeong"},"content":"                    new TeamName(\"Arsenal\"), getTagSet(\"injured\"),","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"23\"),","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Ozil\"), new Phone(\"92352021\"), new Email(\"ozil@example.com\"),","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"badAttitude\"),","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"codeeong"},"content":"                    new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"2\"),","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"codeeong"},"content":"            new Person(new Name(\"Xhaka\"), new Phone(\"92624417\"), new Email(\"xhaka@example.com\"),","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"codeeong"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"), new TeamName(\"Arsenal\"),","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"codeeong"},"content":"                    getTagSet(\"fastRunner\"), new Rating(\"0\"), new Position(\"1\"), new JerseyNumber(\"7\"),","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"codeeong"},"content":"                    new Avatar(\"\u003cUNSPECIFIED\u003e\")),","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        };","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Team[] getSampleTeams()  {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new Team[] {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            new Team(new TeamName(\"Arsenal\")),","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            new Team(new TeamName(\"Chelsea\"))","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        };","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            AddressBook sampleAb \u003d new AddressBook();","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            //@@author Codee","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            for (Team sampleTeam : getSampleTeams()) {","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                sampleAb.createTeam(sampleTeam);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            //@@author","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            for (Person samplePerson : getSamplePersons()) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"                sampleAb.addPerson(samplePerson);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                sampleAb.addPersonToTeam(samplePerson, samplePerson.getTeamName());","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return sampleAb;","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"sample data cannot contain duplicate persons\", e);","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"codeeong"},"content":"        } catch (DuplicateTeamException e) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"codeeong"},"content":"            throw new AssertionError(\" sample data cannot contain duplicate teams\", e);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (String s : strings) {","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            tags.add(new Tag(s));","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return tags;","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":86,"-":83}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedPerson.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.xml.bind.annotation.XmlElement;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * JAXB-friendly version of the Person.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class XmlAdaptedPerson {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private String name;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private String phone;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Boolean phonePrivacy;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private String email;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Boolean emailPrivacy;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private String address;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Boolean addressPrivacy;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private String remark;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Boolean remarkPrivacy;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private String teamName;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private String rating;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    private Boolean ratingPrivacy;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private String position;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private String jerseyNumber;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private String avatar;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Constructs an XmlAdaptedPerson.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * This is the no-arg constructor that is required by JAXB.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public XmlAdaptedPerson() {}","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Constructs an {@code XmlAdaptedPerson} with the given person details.","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public XmlAdaptedPerson(String name, String phone, String email, String address, List\u003cXmlAdaptedTag\u003e tagged) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.name \u003d name;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.email \u003d email;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.address \u003d address;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"        this.remarkPrivacy \u003d false;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"        this.phonePrivacy \u003d false;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"        this.addressPrivacy \u003d false;","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"        this.emailPrivacy \u003d false;","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            this.tagged \u003d new ArrayList\u003c\u003e(tagged);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Converts a given Person into this class for JAXB use.","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedPerson","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public XmlAdaptedPerson(Person source) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        remark \u003d source.getRemark().value;","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        teamName \u003d source.getTeamName().fullName;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        phonePrivacy \u003d source.getPhone().isPrivate();","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        emailPrivacy \u003d source.getEmail().isPrivate();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressPrivacy \u003d source.getAddress().isPrivate();","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        remarkPrivacy \u003d source.getRemark().isPrivate();","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"        ratingPrivacy \u003d source.getRating().isPrivate();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        tagged \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        rating \u003d source.getRating().value;","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        position \u003d source.getPosition().value;","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jerseyNumber \u003d source.getJerseyNumber().value;","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        avatar \u003d source.getAvatar().getValue();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        for (Tag tag : source.getTags()) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            tagged.add(new XmlAdaptedTag(tag));","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Converts this jaxb-friendly adapted person object into the model\u0027s Person object.","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (XmlAdaptedTag tag : tagged) {","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"        if (phonePrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"            phonePrivacy \u003d false;","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"        if (emailPrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lohtianwei"},"content":"            emailPrivacy \u003d false;","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"        if (addressPrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"            addressPrivacy \u003d false;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"        if (remarkPrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"            remarkPrivacy \u003d false;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"        if (ratingPrivacy \u003d\u003d null) {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"            ratingPrivacy \u003d false;","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (this.name \u003d\u003d null) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(this.name)) {","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_NAME_CONSTRAINTS);","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Name name \u003d new Name(this.name);","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (this.phone \u003d\u003d null) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(this.phone)) {","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_PHONE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"        final Phone phone \u003d new Phone(this.phone, this.phonePrivacy);","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (this.email \u003d\u003d null) {","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(this.email)) {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_EMAIL_CONSTRAINTS);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"lohtianwei"},"content":"        final Email email \u003d new Email(this.email, this.emailPrivacy);","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (this.address \u003d\u003d null) {","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(this.address)) {","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_ADDRESS_CONSTRAINTS);","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"        final Address address \u003d new Address(this.address, this.addressPrivacy);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"lohtianwei"},"content":"        final Remark remark \u003d new Remark(this.remark, this.remarkPrivacy);","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final TeamName teamName \u003d new TeamName(this.teamName);","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(personTags);","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (this.rating \u003d\u003d null) {","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rating.class.getSimpleName()));","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!Rating.isValidRating(this.rating)) {","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Rating.MESSAGE_RATING_CONSTRAINTS);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"lohtianwei"},"content":"        final Rating rating \u003d new Rating(this.rating, this.ratingPrivacy);","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (this.position \u003d\u003d null) {","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"                    Position.class.getSimpleName()));","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (!Position.isValidPosition(this.position)) {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Position.MESSAGE_POSITION_CONSTRAINTS);","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        final Position position \u003d new Position(this.position);","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (this.jerseyNumber \u003d\u003d null) {","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    JerseyNumber.class.getSimpleName()));","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!JerseyNumber.isValidJerseyNumber(this.jerseyNumber)) {","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(JerseyNumber.MESSAGE_JERSEY_NUMBER_CONSTRAINTS);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        final JerseyNumber jerseyNumber \u003d new JerseyNumber(this.jerseyNumber);","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (this.avatar \u003d\u003d null) {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"                    Avatar.class.getSimpleName()));","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!Avatar.isValidAvatar(this.avatar)) {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Avatar.MESSAGE_AVATAR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        final Avatar avatar \u003d new Avatar(this.avatar);","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, remark, teamName, tags, rating, position, jerseyNumber, avatar);","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        if (!(other instanceof XmlAdaptedPerson)) {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson otherPerson \u003d (XmlAdaptedPerson) other;","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return Objects.equals(name, otherPerson.name)","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(phone, otherPerson.phone)","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(email, otherPerson.email)","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(address, otherPerson.address)","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagged.equals(otherPerson.tagged);","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":34,"-":209}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedTag.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import javax.xml.bind.annotation.XmlElement;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * JAXB-friendly adapted version of the Tag.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class XmlAdaptedTag {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String tagName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    private String tagColour;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs an XmlAdaptedTag.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * This is the no-arg constructor that is required by JAXB.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public XmlAdaptedTag() {}","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code XmlAdaptedTag} with the given {@code tagName}.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public XmlAdaptedTag(String tagName) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d \"teal\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"     * Constructs a {@code XmlAdaptedTag} with the given {@code tagName} and {@code tagColour}.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    public XmlAdaptedTag(String tagName, String tagColour) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        this.tagColour \u003d tagColour;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts a given Tag into this class for JAXB use.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public XmlAdaptedTag(Tag source) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        tagColour \u003d source.getTagColour();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this jaxb-friendly adapted tag object into the model\u0027s Tag object.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"        if (!Tag.isValidTagColour(tagColour)) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"            throw new IllegalValueException(Tag.MESSAGE_TAG_COLOUR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"        return new Tag(tagName, tagColour);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof XmlAdaptedTag)) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return tagName.equals(((XmlAdaptedTag) other).tagName);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":22,"-":59}},{"path":"src/main/java/seedu/address/storage/XmlAdaptedTeam.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import javax.xml.bind.annotation.XmlElement;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * JAXB-friendly adapted version of the Team","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"public class XmlAdaptedTeam {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Team\u0027s %s field is missing!\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @XmlElement(required \u003d true)","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    private String teamName;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedPerson\u003e players \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"     * Constructs an XmlAdaptedTeam.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"     * This is the no-arg constructor that is required by JAXB.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    public XmlAdaptedTeam() {}","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"     * Constructs a {@code XmlAdaptedTeam} with the given {@code teamName}.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public XmlAdaptedTeam(String teamName, List\u003cXmlAdaptedPerson\u003e persons) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"        this.teamName \u003d teamName;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (persons !\u003d null) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            this.players \u003d new ArrayList\u003c\u003e(persons);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"     * Converts a given Team into this class for JAXB use.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created XmlAdaptedTeam","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"    public XmlAdaptedTeam(Team source) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"        teamName \u003d source.getTeamName().toString();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        players \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person person : source.getTeamPlayers()) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            players.add(new XmlAdaptedPerson(person));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts this jaxb-friendly adapted tag object into the model\u0027s Team object.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"    public Team toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (this.teamName \u003d\u003d null) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalValueException((String.format(MISSING_FIELD_MESSAGE_FORMAT,","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    TeamName.class.getSimpleName())));","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!TeamName.isValidName(this.teamName)) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(TeamName.MESSAGE_TEAM_NAME_CONSTRAINTS);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final TeamName teamName \u003d new TeamName(this.teamName);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final List\u003cPerson\u003e teamPlayers \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        for (XmlAdaptedPerson player : players) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            teamPlayers.add(player.toModelType());","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Team(teamName, teamPlayers);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"    @Override","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"            return true;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"        if (!(other instanceof XmlAdaptedTeam)) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"            return false;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        XmlAdaptedTeam otherTeam \u003d (XmlAdaptedTeam) other;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Objects.equals(teamName, otherTeam.teamName)","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 players.equals(otherTeam.players);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":60,"-":33}},{"path":"src/main/java/seedu/address/storage/XmlSerializableAddressBook.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.xml.bind.annotation.XmlElement;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to XML format","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"@XmlRootElement(name \u003d \"addressbook\")","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class XmlSerializableAddressBook {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedTeam\u003e teams;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedPerson\u003e persons;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @XmlElement","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cXmlAdaptedTag\u003e tags;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates an empty XmlSerializableAddressBook.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * This empty constructor is required for marshalling.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public XmlSerializableAddressBook() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        persons \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        tags \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        teams \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Conversion","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public XmlSerializableAddressBook(ReadOnlyAddressBook src) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        persons.addAll(src.getPersonList().stream().map(XmlAdaptedPerson::new).collect(Collectors.toList()));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags.addAll(src.getTagList().stream().map(XmlAdaptedTag::new).collect(Collectors.toList()));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        teams.addAll(src.getTeamList().stream().map(XmlAdaptedTeam::new).collect(Collectors.toList()));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this addressbook into the model\u0027s {@code AddressBook} object.","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated or duplicates in the","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code XmlAdaptedPerson} or {@code XmlAdaptedTag}.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (XmlAdaptedTag t : tags) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            addressBook.addTag(t.toModelType());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (XmlAdaptedPerson p : persons) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(p.toModelType());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (XmlAdaptedTeam tm : teams) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            addressBook.createTeam(tm.toModelType());","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBook;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof XmlSerializableAddressBook)) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        XmlSerializableAddressBook otherAb \u003d (XmlSerializableAddressBook) other;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return persons.equals(otherAb.persons) \u0026\u0026 tags.equals(otherAb.tags) \u0026\u0026 teams.equals(otherAb.teams);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":83}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Menu;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"import javafx.scene.image.ImageView;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.VBox;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ChangeThemeEvent;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.ExitAppRequestEvent;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.ShowHelpRequestEvent;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    private static String currentTheme \u003d \"view/DarkTheme.css\";","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(this.getClass());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Config config;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private UserPrefs prefs;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"    private Menu mtmLogo;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"    private StackPane teamDisplayPlaceholder;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"    private VBox mainWindow;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Config config, UserPrefs prefs, Logic logic) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Set dependencies","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.config \u003d config;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.prefs \u003d prefs;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Configure the UI","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setTitle(config.getAppTitle());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(prefs);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerators();","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return primaryStage;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /*","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"                event.consume();","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        });","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        //@@author Codee","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        currentTheme \u003d \"view/\" + prefs.getAddressBookTheme();","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        mainWindow.getStylesheets().add(currentTheme);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        mainWindow.getStylesheets().add(\"view/Extensions.css\");","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Image image \u003d new Image(\"images/MyTeamManagerLogo.png\", true);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        mtmLogo.setGraphic(new ImageView(image));","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        mtmLogo.setDisable(true);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        //@@author","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ResultDisplay resultDisplay \u003d new ResultDisplay();","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"codeeong"},"content":"        TeamDisplay teamDisplay \u003d new TeamDisplay(logic.getInitTeamList());","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"codeeong"},"content":"        teamDisplayPlaceholder.getChildren().add(teamDisplay.getRoot());","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(prefs.getAddressBookFilePath());","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(logic);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void hide() {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.hide();","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void setTitle(String appTitle) {","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.setTitle(appTitle);","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Sets the default size based on user preferences.","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(UserPrefs prefs) {","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(prefs.getGuiSettings().getWindowHeight());","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(prefs.getGuiSettings().getWindowWidth());","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (prefs.getGuiSettings().getWindowCoordinates() !\u003d null) {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            primaryStage.setX(prefs.getGuiSettings().getWindowCoordinates().getX());","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            primaryStage.setY(prefs.getGuiSettings().getWindowCoordinates().getY());","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"codeeong"},"content":"     * @returns the {@code currentTheme}.","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"codeeong"},"content":"    public static String getCurrentTheme() {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"codeeong"},"content":"        return currentTheme;","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"codeeong"},"content":"    public void handleChangeThemeRequestEvent(ChangeThemeEvent event) throws CommandException {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"codeeong"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"codeeong"},"content":"        mainWindow.getStylesheets().remove(currentTheme);","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"codeeong"},"content":"        prefs.setAddressBookTheme(event.theme + \"Theme.css\");","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"codeeong"},"content":"        currentTheme \u003d \"view/\" + prefs.getAddressBookTheme();","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"codeeong"},"content":"        mainWindow.getStylesheets().add(currentTheme);","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Returns the current size and the position of the main Window.","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    GuiSettings getCurrentGuiSetting() {","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Opens the help window.","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void handleHelp() {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        if (helpWindow \u003d\u003d null) {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            helpWindow \u003d new HelpWindow();","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        helpWindow.show();","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    void show() {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        primaryStage.show();","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * Closes the application.","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private void handleExit() {","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        raise(new ExitAppRequestEvent());","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return this.personListPanel;","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private void handleShowHelpEvent(ShowHelpRequestEvent event) {","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        handleHelp();","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":35,"-":201}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.MalformedURLException;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import java.util.Iterator;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.paint.ImagePattern;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.shape.Circle;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ChangeTagColourEvent;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public final Person person;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonCard.class);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HBox cardPane;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label name;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label id;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label teamName;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Label rating;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Label position;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Label jerseyNumber;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private Circle avatar;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.person \u003d person;","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        if (person.getRating().isPrivate()) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"            rating.setText(person.getRating().toString());","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            rating.setText(person.getRating().value);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"        teamName.setText(person.getTeamName().fullName);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        position.setText(person.getPosition().getPositionName());","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"        initTags(person);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setContactImage(person.getAvatar().getValue());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setContactImage(String path) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Image img \u003d null;","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (new File(path).isFile()) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                img \u003d new Image(new File(path).toURI().toURL().toString());","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                img \u003d new Image(getClass().getResource(\"/images/placeholder_test.png\").toString());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (MalformedURLException e) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            img \u003d new Image(getClass().getResource(\"/images/placeholder_test.png\").toString());","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        avatar.setVisible(true);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        avatar.setFill(new ImagePattern(img));","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        avatar.setVisible(true);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"     * Creates the tag labels for {@code person}.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"codeeong"},"content":"    private void initTags(Person person) {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"codeeong"},"content":"        person.getTags().forEach(tag -\u003e {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"codeeong"},"content":"            Label tagLabel \u003d new Label(tag.getTagName());","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"codeeong"},"content":"            tagLabel.getStyleClass().add(tag.getTagColour());","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"codeeong"},"content":"            tags.getChildren().add(tagLabel);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"codeeong"},"content":"        });","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"codeeong"},"content":"    /** @@author Codee */","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"codeeong"},"content":"    public void handleColourChangeEvent(ChangeTagColourEvent event) {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"codeeong"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"codeeong"},"content":"        Set\u003cTag\u003e tagSet \u003d person.getTags();","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"codeeong"},"content":"        int i \u003d 0;","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"codeeong"},"content":"        for (Iterator\u003cTag\u003e it \u003d tagSet.iterator(); it.hasNext();) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"codeeong"},"content":"            Tag tag \u003d it.next();","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"codeeong"},"content":"            if (tag.getTagName().equals(event.tagName)) {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"codeeong"},"content":"                tags.getChildren().remove(i);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"codeeong"},"content":"                Label newTagLabel \u003d new Label(event.tagName);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"codeeong"},"content":"                newTagLabel.getStyleClass().add(event.tagColour);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"codeeong"},"content":"                tags.getChildren().add(i, newTagLabel);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"codeeong"},"content":"            i++;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":5,"codeeong":42,"-":97}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.fxmisc.easybind.EasyBind;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.StackPane;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.JumpToListRequestEvent;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedNoParamEvent;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.PersonPanelSelectionChangedEvent;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    private PlayerDetails playerDetails;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    private Integer selectedCardIndex;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private ListView\u003cPersonCard\u003e personListView;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    private StackPane playerDetailsPlaceholder;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setConnections(personList);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private void setConnections(ObservableList\u003cPerson\u003e personList) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ObservableList\u003cPersonCard\u003e mappedList \u003d EasyBind.map(","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                personList, (person) -\u003e new PersonCard(person, personList.indexOf(person) + 1));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        personListView.setItems(mappedList);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        setEventHandlerForSelectionChangeEvent();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void setEventHandlerForSelectionChangeEvent() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        personListView.getSelectionModel().selectedItemProperty()","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .addListener((observable, oldValue, newValue) -\u003e {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    if (newValue !\u003d null) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"                        playerDetailsPlaceholder.getChildren().clear();","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        logger.fine(\"Selection in person list panel changed to : \u0027\" + newValue + \"\u0027\");","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                        raise(new PersonPanelSelectionChangedEvent(newValue));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"                        playerDetails \u003d new PlayerDetails(newValue.person);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"                        playerDetailsPlaceholder.getChildren().add(playerDetails.getRoot());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                });","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Scrolls to the {@code PersonCard} at the {@code index} and selects it.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void scrollTo(int index) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Platform.runLater(() -\u003e {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personListView.scrollTo(index);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personListView.getSelectionModel().clearAndSelect(index);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"            this.selectedCardIndex \u003d index;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        });","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void handleJumpToListRequestEvent(JumpToListRequestEvent event) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        scrollTo(event.targetIndex);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void handlePersonDetailsChangedNoParamEvent(PersonDetailsChangedNoParamEvent event) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        PersonCard newPersonCard \u003d personListView.getItems().get(selectedCardIndex);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        playerDetailsPlaceholder.getChildren().clear();","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        playerDetails \u003d new PlayerDetails(newPersonCard.person);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        playerDetailsPlaceholder.getChildren().add(playerDetails.getRoot());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //@author","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code PersonCard}.","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPersonCard\u003e {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        protected void updateItem(PersonCard person, boolean empty) {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                setGraphic(null);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                setText(null);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            } else {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                setGraphic(person.getRoot());","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":12,"-":98}},{"path":"src/main/java/seedu/address/ui/PlayerDetails.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.HBox;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.PersonDetailsChangedEvent;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":" * The Browser Panel of the App.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"public class PlayerDetails extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    private static final String FXML \u003d \"PlayerDetails.fxml\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"     * or an exception will be thrown by JavaFX during runtime.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    public final Person person;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    private Person personBeforeChange;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    private HBox cardPane;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    private Label name;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"    private Label phone;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"    private Label address;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    private Label email;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"    private Label jerseyNumber;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    private Label remark;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    public PlayerDetails(Person person) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"        this.person \u003d person;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"        name.setText(person.getName().fullName);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        jerseyNumber.setText(\"Jersey Number: \" + person.getJerseyNumber().value);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"        if (person.getPhone().isPrivate()) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"            phone.setText(person.getPhone().toString());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"            phone.setText(person.getPhone().value);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        if (person.getAddress().isPrivate()) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"            address.setText(person.getAddress().toString());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"            address.setText(person.getAddress().value);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        if (person.getEmail().isPrivate()) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"            email.setText(person.getEmail().toString());","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"            email.setText(person.getEmail().value);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"        if (person.getRemark().isPrivate()) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"            remark.setText(\"Remarks: \" + person.getRemark().toString());","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"            remark.setText(\"Remarks: \" + person.getRemark().value);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"        personBeforeChange \u003d this.person;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void handlePersonDetailsChangedEvent(PersonDetailsChangedEvent event) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (event.getPerson().getName().fullName.equals(person.getName().fullName)) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            name.setText((event.getPerson().getName().toString()));","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            phone.setText(event.getPerson().getPhone().toString());","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            jerseyNumber.setText(\"Jersey Number: \" + event.getPerson().getJerseyNumber().toString());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            address.setText(event.getPerson().getAddress().toString());","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            email.setText(event.getPerson().getEmail().toString());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            remark.setText(\"Remarks: \" + event.getPerson().getRemark().toString());","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false}],"authorContributionMap":{"lohtianwei":34,"codeeong":46,"-":14}},{"path":"src/main/java/seedu/address/ui/TeamDisplay.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.FlowPane;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ClearTeamsEvent;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.DeselectTeamEvent;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.HighlightSelectedTeamEvent;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.ui.RemoveSelectedTeamEvent;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ShowNewTeamNameEvent;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.UndoTeamsEvent;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":" * A ui for displaying the team currently chosen","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"public class TeamDisplay extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TeamDisplay.class);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    private static final String FXML \u003d \"TeamDisplay.fxml\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    private ObservableList\u003cTeam\u003e teamList;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    @FXML","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    private FlowPane teams;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    public TeamDisplay(ObservableList\u003cTeam\u003e teamList) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        this.teamList \u003d teamList;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"        initTeams();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"        getTeams();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        registerAsAnEventHandler(this);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"     * Creates the tag labels for {@code person}.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    private void initTeams() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        for (Team t: this.teamList) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"            Label teamLabel \u003d new Label(t.getTeamName().toString());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"            teamLabel.setStyle(\"-fx-text-fill: #3f7bbf\");","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"            teams.getChildren().add(teamLabel);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"            teams.setHgap(10);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    public List\u003cString\u003e getTeams() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        List\u003cString\u003e listOfTeams \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        for (Team t: teamList) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"            listOfTeams.add(t.getTeamName().toString());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"        return listOfTeams;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"    private void handleShowNewTeamEvent(ShowNewTeamNameEvent event) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"        Label newTeamLabel \u003d new Label(event.teamName);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"        newTeamLabel.getStyleClass();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"        teams.getChildren().add(newTeamLabel);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"    private void handleHighlightSelectedTeamEvent(HighlightSelectedTeamEvent event) {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c teamList.size(); i++) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"            if (event.teamName.equals(teamList.get(i).getTeamName().toString())) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"                teams.getChildren().remove(i);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"                Label newTeamLabel \u003d new Label(event.teamName);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"                newTeamLabel.getStyleClass().add(\"selected\");","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"                teams.getChildren().add(i, newTeamLabel);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"            } else {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"                teams.getChildren().remove(i);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"                Label newTeamLabel \u003d new Label(teamList.get(i).getTeamName().toString());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"                newTeamLabel.getStyleClass();","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"                teams.getChildren().add(i, newTeamLabel);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"    private void handleDeselectTeamEvent(DeselectTeamEvent event) {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c teamList.size(); i++) {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"            teams.getChildren().remove(i);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codeeong"},"content":"            Label newTeamLabel \u003d new Label(teamList.get(i).getTeamName().toString());","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"            newTeamLabel.getStyleClass();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"            teams.getChildren().add(i, newTeamLabel);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void handleRemoveSelectedTeamEvent(RemoveSelectedTeamEvent event) {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c teams.getChildren().size(); i++) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (teamList.get(i).getTeamName().equals(event.teamName)) {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                teams.getChildren().remove(i);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"codeeong"},"content":"    private void handleClearTeamsEvent(ClearTeamsEvent event) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"codeeong"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"codeeong"},"content":"        teams.getChildren().clear();","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"codeeong"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"codeeong"},"content":"    private void handleUndoTeamsEvent(UndoTeamsEvent event) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"codeeong"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"codeeong"},"content":"        teams.getChildren().clear();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"codeeong"},"content":"        initTeams();","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"codeeong"},"content":"        getTeams();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":109,"-":15}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.google.common.eventbus.Subscribe;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.ComponentManager;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.events.storage.DataSavingExceptionEvent;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The manager of the UI component.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UiManager extends ComponentManager implements Ui {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_STAGE_TITLE \u003d \"File Op Error\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE \u003d \"Could not save data\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE \u003d \"Could not save data to file\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/football.png\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Config config;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private UserPrefs prefs;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic, Config config, UserPrefs prefs) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.config \u003d config;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.prefs \u003d prefs;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        //Set the application icon.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, config, prefs, logic);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void stop() {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        prefs.updateLastUsedGuiSetting(mainWindow.getCurrentGuiSetting());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        mainWindow.hide();","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void showFileOperationAlertAndWait(String description, String details, Throwable cause) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final String content \u003d details + \":\\n\" + cause.toString();","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(AlertType.ERROR, FILE_OPS_ERROR_DIALOG_STAGE_TITLE, description, content);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                                               String contentText) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        alert.showAndWait();","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Platform.exit();","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        System.exit(1);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event Handling Code \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Subscribe","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void handleDataSavingExceptionEvent(DataSavingExceptionEvent event) {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(LogsCenter.getEventHandlingLogMessage(event));","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showFileOperationAlertAndWait(FILE_OPS_ERROR_DIALOG_HEADER_MESSAGE, FILE_OPS_ERROR_DIALOG_CONTENT_MESSAGE,","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.exception);","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":118}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package guitests.guihandles;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Provides a handle for {@code MainWindow}.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class MainWindowHandle extends StageHandle {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final PersonListPanelHandle personListPanel;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private final ResultDisplayHandle resultDisplay;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"    private final TeamDisplayHandle teamDisplayBar;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final CommandBoxHandle commandBox;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final StatusBarFooterHandle statusBarFooter;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final MainMenuHandle mainMenu;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public MainWindowHandle(Stage stage) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(stage);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanelHandle(getChildNode(PersonListPanelHandle.PERSON_LIST_VIEW_ID));","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"        teamDisplayBar \u003d new TeamDisplayHandle(getChildNode(TeamDisplayHandle.TEAM_DISPLAY_ID));","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_INPUT_FIELD_ID));","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        statusBarFooter \u003d new StatusBarFooterHandle(getChildNode(StatusBarFooterHandle.STATUS_BAR_PLACEHOLDER));","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        mainMenu \u003d new MainMenuHandle(getChildNode(MainMenuHandle.MENU_BAR_ID));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanelHandle getPersonListPanel() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return personListPanel;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return resultDisplay;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandBoxHandle getCommandBox() {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return commandBox;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return statusBarFooter;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public MainMenuHandle getMainMenu() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return mainMenu;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":46}},{"path":"src/test/java/guitests/guihandles/PersonCardHandle.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package guitests.guihandles;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.Node;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Provides a handle to a person card in the person list panel.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonCardHandle extends NodeHandle\u003cNode\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String TAGS_FIELD_ID \u003d \"#tags\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    private static final String RATING_FIELD_ID \u003d \"#rating\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    private static final String POSITION_FIELD_ID \u003d \"#position\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    private static final String TEAMNAME_FIELD_ID \u003d \"#teamName\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Label idLabel;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Label nameLabel;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    private final Label positionLabel;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    private final Label ratingLabel;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    private final Label teamNameLabel;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cLabel\u003e tagLabels;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public PersonCardHandle(Node cardNode) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(cardNode);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.idLabel \u003d getChildNode(ID_FIELD_ID);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.nameLabel \u003d getChildNode(NAME_FIELD_ID);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"        this.positionLabel \u003d getChildNode(POSITION_FIELD_ID);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        this.ratingLabel \u003d getChildNode(RATING_FIELD_ID);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        this.teamNameLabel \u003d getChildNode(TEAMNAME_FIELD_ID);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Region tagsContainer \u003d getChildNode(TAGS_FIELD_ID);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tagLabels \u003d tagsContainer","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .getChildrenUnmodifiable()","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .stream()","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .map(Label.class::cast)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getId() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return idLabel.getText();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getName() {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return nameLabel.getText();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"    public String getPosition() {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        return positionLabel.getText();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"    public String getRating() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        return ratingLabel.getText();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"    public String getTeamName() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"        return teamNameLabel.getText();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getTags() {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return tagLabels","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .stream()","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(Label::getText)","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"    public List\u003cString\u003e getTagStyleClasses(String tag) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"        return tagLabels","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"                .stream()","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"                .filter(label -\u003e label.getText().equals(tag))","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"                .map(Label::getStyleClass)","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"                .findFirst()","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"No such tag.\"));","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":25,"-":56}},{"path":"src/test/java/guitests/guihandles/PlayerDetailsHandle.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package guitests.guihandles;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import javafx.scene.Node;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" * Provides a handle to a player details pane.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"//@@author Codee","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PlayerDetailsHandle extends NodeHandle\u003cNode\u003e {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String PLAYER_DETAILS_DISPLAY_ID \u003d \"#playerDetails\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String JERSEY_FIELD_ID \u003d \"#jerseyNumber\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String PHONE_FIELD_ID \u003d \"#phone\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String EMAIL_FIELD_ID \u003d \"#email\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String ADDRESS_FIELD_ID \u003d \"#address\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String REMARK_FIELD_ID \u003d \"#remark\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Label nameLabel;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Label jerseyLabel;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Label addressLabel;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Label phoneLabel;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Label emailLabel;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Label remarkLabel;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PlayerDetailsHandle(Node cardNode) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(cardNode);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.nameLabel \u003d getChildNode(NAME_FIELD_ID);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phoneLabel \u003d getChildNode(PHONE_FIELD_ID);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.addressLabel \u003d getChildNode(ADDRESS_FIELD_ID);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.emailLabel \u003d getChildNode(EMAIL_FIELD_ID);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.remarkLabel \u003d getChildNode(REMARK_FIELD_ID);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.jerseyLabel \u003d getChildNode(JERSEY_FIELD_ID);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getPhone() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return phoneLabel.getText();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String getName() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return nameLabel.getText();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String getAddress() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return addressLabel.getText();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getJerseyNumber() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return jerseyLabel.getText().substring(15);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String getRemarks() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return remarkLabel.getText().substring(9);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getEmail() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return emailLabel.getText();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":8,"-":56}},{"path":"src/test/java/guitests/guihandles/TeamDisplayHandle.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package guitests.guihandles;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import javafx.scene.Node;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":" * Provides a handle for {@code TeamDisplayHandle} containing the list of {@code Teams}.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"public class TeamDisplayHandle extends NodeHandle\u003cNode\u003e {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    public static final String TEAM_DISPLAY_ID \u003d \"#teams\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    private final List\u003cLabel\u003e teamLabels;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    public TeamDisplayHandle(Node teamDisplayNode) {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"        super(teamDisplayNode);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"        Region teamContainer \u003d getChildNode(TEAM_DISPLAY_ID);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"        this.teamLabels \u003d teamContainer","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"                .getChildrenUnmodifiable()","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"                .stream()","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"                .map(Label.class::cast)","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    public List\u003cString\u003e getTeams() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        return teamLabels","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"                .stream()","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"                .map(Label::getText)","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":37}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ConfigTest {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"        String defaultConfigAsString \u003d \"App title : My Team Manager\\n\"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"Current log level : INFO\\n\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":31}},{"path":"src/test/java/seedu/address/commons/util/XmlUtilTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javax.xml.bind.JAXBException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javax.xml.bind.annotation.XmlRootElement;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.XmlAdaptedPerson;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.XmlAdaptedTag;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.XmlSerializableAddressBook;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TestUtil;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class XmlUtilTest {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"src/test/data/XmlUtilTest/\");","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final File EMPTY_FILE \u003d new File(TEST_DATA_FOLDER + \"empty.xml\");","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final File MISSING_FILE \u003d new File(TEST_DATA_FOLDER + \"missing.xml\");","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final File VALID_FILE \u003d new File(TEST_DATA_FOLDER + \"validAddressBook.xml\");","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final File MISSING_PERSON_FIELD_FILE \u003d new File(TEST_DATA_FOLDER + \"missingPersonField.xml\");","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final File INVALID_PERSON_FIELD_FILE \u003d new File(TEST_DATA_FOLDER + \"invalidPersonField.xml\");","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final File VALID_PERSON_FILE \u003d new File(TEST_DATA_FOLDER + \"validPerson.xml\");","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final File TEMP_FILE \u003d new File(TestUtil.getFilePathInSandboxFolder(\"tempAddressBook.xml\"));","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"9482asf424\";","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Hans Muster\";","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"9482424\";","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"hans@example\";","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"4th street\";","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final List\u003cXmlAdaptedTag\u003e VALID_TAGS \u003d Collections.singletonList(new XmlAdaptedTag(\"friends\"));","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void getDataFromFile_nullFile_throwsNullPointerException() throws Exception {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        XmlUtil.getDataFromFile(null, AddressBook.class);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void getDataFromFile_nullClass_throwsNullPointerException() throws Exception {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        XmlUtil.getDataFromFile(VALID_FILE, null);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void getDataFromFile_missingFile_fileNotFoundException() throws Exception {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        thrown.expect(FileNotFoundException.class);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        XmlUtil.getDataFromFile(MISSING_FILE, AddressBook.class);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getDataFromFile_emptyFile_dataFormatMismatchException() throws Exception {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        thrown.expect(JAXBException.class);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        XmlUtil.getDataFromFile(EMPTY_FILE, AddressBook.class);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void getDataFromFile_validFile_validResult() throws Exception {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook dataFromFile \u003d XmlUtil.getDataFromFile(VALID_FILE, XmlSerializableAddressBook.class).toModelType();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"        assertEquals(0, dataFromFile.getTeamList().size());","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(0, dataFromFile.getTagList().size());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithMissingPersonField_validResult() throws Exception {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile(","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                MISSING_PERSON_FIELD_FILE, XmlAdaptedPersonWithRootElement.class);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson(","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson, actualPerson);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithInvalidPersonField_validResult() throws Exception {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile(","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                INVALID_PERSON_FIELD_FILE, XmlAdaptedPersonWithRootElement.class);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson(","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson, actualPerson);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void xmlAdaptedPersonFromFile_fileWithValidPerson_validResult() throws Exception {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson actualPerson \u003d XmlUtil.getDataFromFile(","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                VALID_PERSON_FILE, XmlAdaptedPersonWithRootElement.class);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        XmlAdaptedPerson expectedPerson \u003d new XmlAdaptedPerson(","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson, actualPerson);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void saveDataToFile_nullFile_throwsNullPointerException() throws Exception {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(null, new AddressBook());","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void saveDataToFile_nullClass_throwsNullPointerException() throws Exception {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(VALID_FILE, null);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void saveDataToFile_missingFile_fileNotFoundException() throws Exception {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        thrown.expect(FileNotFoundException.class);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(MISSING_FILE, new AddressBook());","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void saveDataToFile_validFile_dataSaved() throws Exception {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        TEMP_FILE.createNewFile();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        XmlSerializableAddressBook dataToWrite \u003d new XmlSerializableAddressBook(new AddressBook());","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        XmlSerializableAddressBook dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableAddressBook.class);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBookBuilder builder \u003d new AddressBookBuilder(new AddressBook());","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        dataToWrite \u003d new XmlSerializableAddressBook(","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                builder.withPerson(new PersonBuilder().build()).withTag(\"Friends\").build());","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        XmlUtil.saveDataToFile(TEMP_FILE, dataToWrite);","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        dataFromFile \u003d XmlUtil.getDataFromFile(TEMP_FILE, XmlSerializableAddressBook.class);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(dataToWrite, dataFromFile);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Test class annotated with {@code XmlRootElement} to allow unmarshalling of .xml data to {@code XmlAdaptedPerson}","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * objects.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @XmlRootElement(name \u003d \"person\")","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private static class XmlAdaptedPersonWithRootElement extends XmlAdaptedPerson {}","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":145}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.Assert.fail;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.exceptions.NoPlayerException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.team.exceptions.TeamNotFoundException;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandTest {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        new AddCommand(null);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d getAddCommandForPerson(validPerson, modelStub).execute();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.feedbackToUser);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() throws Exception {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubThrowingDuplicatePersonException();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        thrown.expect(CommandException.class);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        thrown.expectMessage(AddCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        getAddCommandForPerson(validPerson, modelStub).execute();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Generates a new AddCommand with the details of the given person.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private AddCommand getAddCommandForPerson(Person person, Model model) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddCommand command \u003d new AddCommand(person);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return command;","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"        public void sortPlayers(String field, String order) throws NoPlayerException {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"        public void lockAddressBookModel() {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lohtianwei"},"content":"        public void unlockAddressBookModel() {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"        public boolean getLockState() {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lohtianwei"},"content":"            return false;","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lohtianwei"},"content":"        @Override","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"        public UserPrefs getUserPrefs() {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"            return null;","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void resetData(ReadOnlyAddressBook newData) {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) throws PersonNotFoundException {","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void updatePerson(Person target, Person editedPerson)","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return null;","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"codeeong"},"content":"        @Override","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"codeeong"},"content":"        public ObservableList\u003cTeam\u003e getInitTeamList() {","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"codeeong"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"codeeong"},"content":"            return null;","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(TeamName targetTeam) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called\");","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void deleteTag(Tag tag) {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void createTeam(Team team) {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"            fail(\"This method should not be be called.\");","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void assignPersonToTeam(Person person, TeamName teamName) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void unassignPersonFromTeam(Person person) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void removeTeam(TeamName teamName) throws TeamNotFoundException {","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void renameTeam(Team targetTeam, TeamName updatedTeamName) {","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"codeeong"},"content":"        @Override","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"codeeong"},"content":"        public boolean setTagColour(Tag tag, String colour) {","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"codeeong"},"content":"            fail(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"codeeong"},"content":"            return false;","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * A Model stub that always throw a DuplicatePersonException when trying to add a person.","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private class ModelStubThrowingDuplicatePersonException extends ModelStub {","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return new AddressBook();","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void assignPersonToTeam(Person person, TeamName teamName)","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"            throws DuplicatePersonException {","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return new AddressBook();","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":29,"codeeong":12,"-":216}},{"path":"src/test/java/seedu/address/logic/commands/ChangeThemeCommandTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.fail;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommandTest {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"    private String[] listThemes \u003d { \"Light\", \"Dark\" };","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    public void execute_validTheme_success() {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"        assertExecutionSuccess(listThemes[0]);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    public void execute_invalidTheme_failure() {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"        assertExecutionFailure(\"FakeTheme\", Messages.MESSAGE_INVALID_THEME);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"        ChangeThemeCommand[] listThemeCommands \u003d new ChangeThemeCommand[2];","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"            listThemeCommands[i] \u003d new ChangeThemeCommand(listThemes[i]);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"            assertTrue(listThemeCommands[i].equals(new ChangeThemeCommand(listThemes[i])));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"            assertFalse(listThemeCommands[i].equals(1));","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"            assertFalse(listThemeCommands[i].equals(null));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        // different theme -\u003e returns false","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"        int j \u003d 1;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"            if (i !\u003d j) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"                assertFalse(listThemeCommands[i].equals(listThemeCommands[j]));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"            j--;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"     * Executes a {@code ChangeThemeCommand} with the given {@code theme}.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"    private void assertExecutionSuccess(String theme) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"        ChangeThemeCommand changethemeCommand \u003d new ChangeThemeCommand(theme);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"        try {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"            CommandResult commandResult \u003d changethemeCommand.execute();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"            assertEquals(String.format(ChangeThemeCommand.MESSAGE_THEME_SUCCESS, theme),","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"                    commandResult.feedbackToUser);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"        } catch (CommandException ce) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"            throw new IllegalArgumentException(\"Execution of command should not fail.\", ce);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"     * Executes a {@code ChangeThemeCommand} with the given {@code theme}.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"    private void assertExecutionFailure(String theme, String expectedMessage) {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"        ChangeThemeCommand changethemeCommand \u003d new ChangeThemeCommand(theme);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"        try {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"            changethemeCommand.execute();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"            fail(\"The expected CommandException was not thrown.\");","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"        } catch (CommandException ce) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"            assertEquals(expectedMessage, ce.getMessage());","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":89}},{"path":"src/test/java/seedu/address/logic/commands/KeyCommandTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Before;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"public class KeyCommandTest {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"    private Model model;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    @Before","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"    public void start() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"        model \u003d new ModelManager();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    public void checkKey() throws Exception {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"        //checks that default lock state is false","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"        assertFalse(model.getLockState());","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        //checks that key can lock MTM","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"        model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(model.getLockState());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"        //checks that key can unlock MTM","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"        model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"        assertFalse(model.getLockState());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        //checks that toggling works","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        assertFalse(model.getLockState());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"        model.unlockAddressBookModel();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        model.lockAddressBookModel();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(model.getLockState());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":44}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_EMPTY;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareRedoCommand;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.prepareUndoCommand;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"//@@author jordancjq","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommandTest {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_addRemarkUnfilteredList_success() throws Exception {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d personInList.withRemark(VALID_REMARK_AMY).build();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(indexLastPerson, remarkedPerson.getRemark().toString());","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, remarkedPerson);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(lastPerson, remarkedPerson);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_deleteRemarkUnfilteredList_success() throws Exception {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d personInList.withRemark(VALID_REMARK_EMPTY).build();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(indexLastPerson, remarkedPerson.getRemark().toString());","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, remarkedPerson);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(lastPerson, remarkedPerson);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() throws Exception {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d new PersonBuilder(personInFilteredList).withRemark(VALID_REMARK_BOB).build();","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(INDEX_FIRST_PERSON, remarkedPerson.getRemark().toString());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, remarkedPerson);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(personInFilteredList, remarkedPerson);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codeeong"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(outOfBoundIndex, VALID_REMARK_BOB);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Remark filtered list where index is larger than size of filtered list,","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(outOfBoundIndex, VALID_REMARK_BOB);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person personToRemark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d new PersonBuilder(personToRemark).withRemark(VALID_REMARK_AMY).build();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_REMARK_AMY);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // remark -\u003e first person remarked","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        remarkCommand.execute();","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        undoRedoStack.push(remarkCommand);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // redo -\u003e same first person remarked again","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(personToRemark, remarkedPerson);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void executeUndoRedo_invalidIndexUnfilteredList_failure() {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(outOfBoundIndex, VALID_REMARK_EMPTY);","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // execution failed -\u003e remarkCommand not pushed into undoRedoStack","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(remarkCommand, model, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // no commands in undoRedoStack -\u003e undoCommand and redoCommand fail","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * 1. Updates {@code Person#remark} from a filtered list.","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * 2. Undo the update.","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * 3. The unfiltered list should be shown now. Verify that the index of the previously updated person in the","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * unfiltered list is different from the index at the filtered list.","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * 4. Redo the update. This ensures {@code RedoCommand} updates the person object regardless of indexing.","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void executeUndoRedo_validIndexFilteredList_samePersonRemarked() throws Exception {","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UndoRedoStack undoRedoStack \u003d new UndoRedoStack();","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UndoCommand undoCommand \u003d prepareUndoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        RedoCommand redoCommand \u003d prepareRedoCommand(model, undoRedoStack);","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_REMARK_BOB);","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person personToRemark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person remarkedPerson \u003d new PersonBuilder(personToRemark).withRemark(VALID_REMARK_BOB).build();","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // remark -\u003e remarks second person in unfiltered person list / first person in filtered person list","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        remarkCommand.execute();","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        undoRedoStack.push(remarkCommand);","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list to show all persons","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        expectedModel.updatePerson(personToRemark, remarkedPerson);","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertNotEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), personToRemark);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // redo -\u003e remarks same second person in unfiltered person list","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        final RemarkCommand standardCommand \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_REMARK_AMY);","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        RemarkCommand commandWithSameValues \u003d prepareCommand(INDEX_FIRST_PERSON, VALID_REMARK_AMY);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON, new Remark(VALID_REMARK_AMY))));","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // different remark -\u003e returns false","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_BOB))));","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Returns an {@code RemarkCommand} with parameters {@code index} and {@code remark}.","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    private RemarkCommand prepareCommand(Index index, String remark) {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(index, new Remark(remark));","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        remarkCommand.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return remarkCommand;","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":218}},{"path":"src/test/java/seedu/address/logic/commands/SetCommandTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import org.junit.Before;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":" * This is the unit test for {@code SetCommand}.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"public class SetCommandTest {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    private Model model;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"    private Tag tagOne \u003d new Tag(\"testTagOne\");","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    private Tag tagTwo \u003d new Tag(\"testTagTwo\");","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    @Before","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"        SetCommand testCommand \u003d new SetCommand(tagOne, \"teal\");","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"        SetCommand testCommandTwo \u003d new SetCommand(tagOne, \"teal\");","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        //Test to ensure command is strictly a SetCommand","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new AddCommand(CARL)));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new ClearCommand()));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new DeleteCommand(INDEX_FIRST_PERSON)));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new HistoryCommand()));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new HelpCommand()));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new RedoCommand()));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new UndoCommand()));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new ListCommand()));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_AMY)));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        //Test to check that different tag string returns false","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new SetCommand(tagTwo, \"teal\")));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommandTwo.equals(new SetCommand(tagTwo, \"teal\")));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        //Test to check that different color strings returns false","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommand.equals(new SetCommand(tagOne, \"red\")));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"        assertFalse(testCommandTwo.equals(new SetCommand(tagTwo, \"red\")));","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"    public void checkCommandResult() throws CommandException {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"        //Check if the result message is correct when there is no tags found","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"        SetCommand command \u003d new SetCommand(new Tag(\"blablabla\"), \"teal\");","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"codeeong"},"content":"        assertTrue(command.execute().feedbackToUser.equals(\"tag is invalid! Please input a valid tag name!\"));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"codeeong"},"content":"        //When tags is present","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"codeeong"},"content":"        command \u003d new SetCommand(new Tag(\"friends\"), \"red\");","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"codeeong"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"        assertFalse(command.execute().feedbackToUser.equals(\"No such tag\"));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"        assertTrue(command.execute().feedbackToUser.equals(\"tag [friends] colour changed to red\"));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"        //Check if friends tags are set to color","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"        command \u003d new SetCommand(new Tag(\"friends\"), \"teal\");","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"        command.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"        assertTrue(command.execute().feedbackToUser.equals(\"tag [friends] colour changed to teal\"));","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"        for (Tag tag : model.getAddressBook().getTagList()) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"            if (\"friends\".equals(tag.tagName)) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"                assertTrue(tag.getTagColour().equals(\"teal\"));","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"                assertFalse(tag.getTagColour().equals(\"pink\"));","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codeeong"},"content":"        resetAllTagsToDefault();","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"     * This method allows all tags to be set to the default colour \"teal\"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codeeong"},"content":"    public void resetAllTagsToDefault() {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"        ObservableList\u003cTag\u003e allTags \u003d model.getAddressBook().getTagList();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"        for (Tag t : allTags) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"            t.changeTagColour(\"teal\");","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":100}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.SortCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalPersons.getEmptyAddressBook;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalPersons.getSortedAddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"public class SortCommandTest {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    @Rule","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"    public ExpectedException error \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"    private Model emptyModel \u003d new ModelManager(getEmptyAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByNameDesc \u003d new ModelManager(","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"            getSortedAddressBook(\"name\", \"desc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByAdd \u003d new ModelManager(","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"            getSortedAddressBook(\"address\", \"asc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByAddDesc \u003d new ModelManager(","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"            getSortedAddressBook(\"address\", \"desc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByEmail \u003d new ModelManager(getSortedAddressBook(\"email\", \"asc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"    private Model sortedByEmailDesc \u003d new ModelManager(","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"            getSortedAddressBook(\"email\", \"desc\"), new UserPrefs());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"    public void noPlayers() throws CommandException {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        error.expect(CommandException.class);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        prepareCommand(\"name\", \"asc\", emptyModel).execute();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"    public void emptySortField_throwsNullPointerEx() {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"        error.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        new SortCommand(\"name\", null);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    public void emptySortOrder_throwsNullPointerEx() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        error.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"        new SortCommand(null, \"asc\");","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"    public void sortByName_success() throws Exception {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"name\", \"asc\", model);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"name\", \"asc\");","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, model);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"    public void sortByNameDesc_success() throws Exception {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"name\", \"desc\", model);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"name\", \"desc\");","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByNameDesc);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"    public void sortByAdd_success() throws Exception {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"address\", \"asc\", model);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"address\", \"asc\");","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByAdd);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"    public void sortByAddDesc_success() throws Exception {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"address\", \"desc\", model);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"address\", \"desc\");","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByAddDesc);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"    public void sortByEmail_success() throws Exception {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"email\", \"asc\", model);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"email\", \"asc\");","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByEmail);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"    public void sortByEmailDesc_success() throws Exception {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"        SortCommand so \u003d prepareCommand(\"email\", \"desc\", model);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(MESSAGE_SUCCESS, \"email\", \"desc\");","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"        assertCommandSuccess(so, model, expected, sortedByEmailDesc);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lohtianwei"},"content":"     * Returns a {@code sortCommand} with the parameters {@code field and @code order}.","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"    private SortCommand prepareCommand(String field, String order, Model model) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lohtianwei"},"content":"        SortCommand sortCommand \u003d new SortCommand(field, order);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"        sortCommand.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"        return sortCommand;","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":108}},{"path":"src/test/java/seedu/address/logic/commands/TogglePrivacyCommandTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static junit.framework.TestCase.assertEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static junit.framework.TestCase.assertFalse;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.TogglePrivacyCommand.EditPersonPrivacy;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.CommandHistory;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.UndoRedoStack;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.testutil.EditPersonPrivacyBuilder;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"public class TogglePrivacyCommandTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"    public void editPersonPrivacyTest() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacy();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        assertFalse(epp.anyNonNullField());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy eppBuilder \u003d new EditPersonPrivacyBuilder().setAddressPrivate(\"false\")","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"                .setEmailPrivate(\"false\").setPhonePrivate(\"true\").setRatingPrivate(\"false\")","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"                .setRemarkPrivate(\"true\").build();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateAddress(false);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateEmail(false);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivatePhone(true);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateRating(false);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateRemark(true);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivateAddress(), epp.getPrivateAddress());","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivateEmail(), epp.getPrivateEmail());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivatePhone(), epp.getPrivatePhone());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivateRating(), epp.getPrivateRating());","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(eppBuilder.getPrivateRemark(), epp.getPrivateRemark());","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"    public void oneFieldToggledSuccess() throws Exception {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"        Index indexLast \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLast.getZeroBased());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        Person listedPerson \u003d new PersonBuilder().withName(lastPerson.getName().toString())","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"                .withEmail(lastPerson.getEmail().toString()).withRating(lastPerson.getRating().toString())","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"                .withPhone(lastPerson.getPhone().toString()).build();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"        listedPerson.getPhone().setPrivate(true);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacyBuilder(listedPerson).setPhonePrivate(\"true\").build();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand togglePrivacyCommand \u003d new TogglePrivacyCommand(indexLast, epp);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        togglePrivacyCommand.setData(model, new CommandHistory(), new UndoRedoStack());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"        String expected \u003d String.format(TogglePrivacyCommand.MESSAGE_SUCCESS, listedPerson);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        expectedModel.updatePerson(lastPerson, listedPerson);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":67}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.fail;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_ARSENAL;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.ChangeThemeCommand;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CreateCommand;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HistoryCommand;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.KeyCommand;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SelectCommand;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.SortCommand;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Remark;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"    private static final boolean DEFAULT_LOCK_STATE \u003d false;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_addAlias() throws Exception {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(AddCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"                + PersonUtil.getPersonDetails(person), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new AddCommand(person), command);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\", DEFAULT_LOCK_STATE) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_clearAlias() throws Exception {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_ALIAS + \" 3\", DEFAULT_LOCK_STATE) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_deleteAlias() throws Exception {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"                DeleteCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_PERSON.getOneBased(), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getPersonDetails(person), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_editAlias() throws Exception {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getPersonDetails(person), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof ExitCommand);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", DEFAULT_LOCK_STATE) instanceof ExitCommand);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_remark() throws Exception {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Remark remark \u003d new Remark(\"foobar\");","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark, DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_remarkAlias() throws Exception {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Remark remark \u003d new Remark(\"foobar\");","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark, DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream()","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"                        .collect(Collectors.joining(\" \")), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_findAlias() throws Exception {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"lohtianwei"},"content":"                FindCommand.COMMAND_ALIAS + \" \" + keywords.stream()","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"lohtianwei"},"content":"                        .collect(Collectors.joining(\" \")), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof HelpCommand);","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\",","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof HelpCommand);","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseCommand_history() throws Exception {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof HistoryCommand);","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_WORD + \" 3\",","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof HistoryCommand);","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"lohtianwei"},"content":"            parser.parseCommand(\"histories\", DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            fail(\"The expected ParseException was not thrown.\");","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            assertEquals(MESSAGE_UNKNOWN_COMMAND, pe.getMessage());","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_historyAlias() throws Exception {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof HistoryCommand);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(HistoryCommand.COMMAND_ALIAS + \" 3\",","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof HistoryCommand);","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseCommand_create() throws Exception {","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Team team \u003d new Team(new TeamName(VALID_TEAM_ARSENAL));","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        CreateCommand command \u003d (CreateCommand) parser.parseCommand(CreateCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"lohtianwei"},"content":"            + VALID_TEAM_ARSENAL, DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(new CreateCommand(team), command);","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseCommand_createAlias() throws Exception {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Team team \u003d new Team(new TeamName(VALID_TEAM_ARSENAL));","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        CreateCommand command \u003d (CreateCommand) parser.parseCommand(CreateCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"lohtianwei"},"content":"                + VALID_TEAM_ARSENAL, DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(new CreateCommand(team), command);","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof ListCommand);","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\",","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof ListCommand);","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_listAlias() throws Exception {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof ListCommand);","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_ALIAS + \" 3\",","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof ListCommand);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseCommand_select() throws Exception {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        SelectCommand command \u003d (SelectCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"lohtianwei"},"content":"                SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertEquals(new SelectCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_selectAlias() throws Exception {","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"lohtianwei"},"content":"        SelectCommand command \u003d (SelectCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"lohtianwei"},"content":"                SelectCommand.COMMAND_ALIAS + \" \" + INDEX_FIRST_PERSON.getOneBased(), DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(new SelectCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parseCommand_redoCommandWord_returnsRedoCommand() throws Exception {","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(\"redo 1\", DEFAULT_LOCK_STATE) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_redoCommandAlias_returnsRedoCommand() throws Exception {","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_ALIAS + \" 1\",","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parseCommand_undoCommandWord_returnsUndoCommand() throws Exception {","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD, DEFAULT_LOCK_STATE) instanceof UndoCommand);","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(\"undo 3\", DEFAULT_LOCK_STATE) instanceof UndoCommand);","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_undoCommandAlias_returnsUndoCommand() throws Exception {","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_ALIAS, DEFAULT_LOCK_STATE) instanceof UndoCommand);","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_ALIAS + \" 3\",","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"lohtianwei"},"content":"                DEFAULT_LOCK_STATE) instanceof UndoCommand);","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() throws Exception {","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        thrown.expect(ParseException.class);","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        thrown.expectMessage(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"lohtianwei"},"content":"        parser.parseCommand(\"\", DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() throws Exception {","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        thrown.expect(ParseException.class);","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        thrown.expectMessage(MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"lohtianwei"},"content":"        parser.parseCommand(\"unknownCommand\", DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"lohtianwei"},"content":"    /** @lohtianwei */","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_sort() throws Exception {","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"lohtianwei"},"content":"                + SortCommandParser.ACCEPTED_FIELDS.get(0) + \" \"","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"lohtianwei"},"content":"                + SortCommandParser.ACCEPTED_ORDERS.get(0), DEFAULT_LOCK_STATE) instanceof SortCommand);","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_sortAlias() throws Exception {","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"lohtianwei"},"content":"                + SortCommandParser.ACCEPTED_FIELDS.get(0) + \" \"","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"lohtianwei"},"content":"                + SortCommandParser.ACCEPTED_ORDERS.get(0), DEFAULT_LOCK_STATE) instanceof SortCommand);","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_key() throws Exception {","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(KeyCommand.COMMAND_WORD","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"lohtianwei"},"content":"                + \" ilikesports\", DEFAULT_LOCK_STATE) instanceof KeyCommand);","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_keyAlias() throws Exception {","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(KeyCommand.COMMAND_WORD","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"lohtianwei"},"content":"                + \" ilikesports\", DEFAULT_LOCK_STATE) instanceof KeyCommand);","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_togglePrivacy() throws Exception {","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(TogglePrivacyCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"lohtianwei"},"content":"                + PREFIX_PHONE, DEFAULT_LOCK_STATE) instanceof TogglePrivacyCommand);","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"lohtianwei"},"content":"    public void parseCommand_togglePrivacyAlias() throws Exception {","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"lohtianwei"},"content":"        assertTrue(parser.parseCommand(TogglePrivacyCommand.COMMAND_ALIAS + \" \"","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"lohtianwei"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"lohtianwei"},"content":"                + PREFIX_PHONE, DEFAULT_LOCK_STATE) instanceof TogglePrivacyCommand);","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"codeeong"},"content":"    /** @@Codee */","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"codeeong"},"content":"    public void parseCommand_theme() throws Exception {","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"codeeong"},"content":"        String[] listThemes \u003d { \"Light\", \"Dark\" };","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"codeeong"},"content":"            ChangeThemeCommand command \u003d (ChangeThemeCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"lohtianwei"},"content":"                    ChangeThemeCommand.COMMAND_WORD + \" \" + listThemes[i], DEFAULT_LOCK_STATE);","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"codeeong"},"content":"            assertEquals(new ChangeThemeCommand(listThemes[i]), command);","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":150,"codeeong":12,"-":159}},{"path":"src/test/java/seedu/address/logic/parser/ChangeThemeCommandParserTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.ChangeThemeCommand;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"public class ChangeThemeCommandParserTest {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"    private ChangeThemeCommandParser parser \u003d new ChangeThemeCommandParser();","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    private String[] listThemes \u003d { \"Light\", \"Dark\" };","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public void parse_validArgs_returnsThemeCommand() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"            assertParseSuccess(parser, listThemes[i], new ChangeThemeCommand(listThemes[i]));","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    public void parse_invalidArgs_throwsParseException() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"        // Empty Argument","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"        assertParseFailure(parser, \"\",","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ChangeThemeCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":30}},{"path":"src/test/java/seedu/address/logic/parser/SetCommandParserTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG_COLOUR;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.TypicalTags.FRIEND;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"import seedu.address.logic.commands.SetCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"public class SetCommandParserTest {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"    private SetCommandParser parser \u003d new SetCommandParser();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public void parse_validArgs_returnsSetCommand() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"        String userInput \u003d \" \" + PREFIX_TAG + FRIEND.getTagName() + \" \" + PREFIX_TAG_COLOUR + \"green\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"        assertParseSuccess(parser, userInput, new SetCommand(FRIEND, \"green\"));","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":23}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"//import static seedu.address.logic.commands.SortCommand.BY_ASCENDING;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"//import static seedu.address.logic.commands.SortCommand.BY_DESCENDING;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.SortCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"//import seedu.address.logic.commands.SortCommand;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"public class SortCommandParserTest {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"    public void noArguments_throwsParseException() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"    public void parse_invalidArguments_failure() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"        //more than 1 field entered","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"name\" + \" \" + \"address\" + \" \" + \"asc\",","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        //invalid field entered","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"invalid\" + \"asc\",","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        //invalid sort order entered","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"name\" + \" \" + \"invalid\",","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        //no field entered","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"asc\",","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        //no order entered","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"name\",","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"    /*","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    public void parse_validArguments_success() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by name in asc order","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"name\" + \" \" + BY_ASCENDING,","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"name\", BY_ASCENDING));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by name in desc order","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"name\" + \" \" + BY_DESCENDING,","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"name\", BY_DESCENDING));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by address in asc order","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"address\" + \" \" + BY_ASCENDING,","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"address\", BY_ASCENDING));","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by address in desc order","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"address\" + \" \" + BY_DESCENDING,","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"address\", BY_DESCENDING));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by phone in asc order","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"phone\" + \" \" + BY_ASCENDING,","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"phone\", BY_ASCENDING));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by phone in desc order","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"phone\" + \" \" + BY_DESCENDING,","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"phone\", BY_DESCENDING));","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by email in asc order","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"email\" + \" \" + BY_ASCENDING,","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"email\", BY_ASCENDING));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"        //valid input for sort by email in desc order","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"        assertParseSuccess(parser, \"email\" + \" \" + BY_DESCENDING,","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"                new SortCommand(\"email\", BY_DESCENDING));","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"    */","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":82}},{"path":"src/test/java/seedu/address/logic/parser/TogglePrivacyCommandParserTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"lohtianwei"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand.EditPersonPrivacy;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.testutil.EditPersonPrivacyBuilder;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"public class TogglePrivacyCommandParserTest {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"            (MESSAGE_INVALID_COMMAND_FORMAT, TogglePrivacyCommand.MESSAGE_USAGE);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"    private static final String MESSAGE_NO_FIELDS \u003d String.format(TogglePrivacyCommand.MESSAGE_NO_FIELDS);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"    private TogglePrivacyCommandParser parser \u003d new TogglePrivacyCommandParser();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"    public void parseInvalidIndex() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"        // zero index","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        //negative index","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        //invalid index","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"1 random\", MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"    public void parseMissingField_fail() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"        // no prefix specified","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_NO_FIELDS);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"        //no index specified","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"        //nothing specified after command word","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"    public void parseInvalidPrefix_fail() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_NAME,","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TogglePrivacyCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"    public void parseOneField_success() throws ParseException {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        Index target \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"        String input \u003d target.getOneBased() + \" \" + PREFIX_PHONE;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacyBuilder().setPhonePrivate(\"false\").build();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand expected \u003d new TogglePrivacyCommand(target, epp);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand actual \u003d parser.parse(input);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"        compareTpCommand(expected, actual);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"    @Test","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"    public void parseValidFollowedbyInvalid_success() throws ParseException {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        Index target \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"        String input \u003d target.getOneBased() + \" \" + PREFIX_PHONE + \" \" + PREFIX_NAME;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        EditPersonPrivacy epp \u003d new EditPersonPrivacyBuilder().setPhonePrivate(\"false\").build();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand expected \u003d new TogglePrivacyCommand(target, epp);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"        TogglePrivacyCommand actual \u003d parser.parse(input);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"        compareTpCommand(expected, actual);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"     * Checks if two TP commands are equal","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"     * @param expected","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"     * @param actual","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"    private void compareTpCommand(TogglePrivacyCommand expected, TogglePrivacyCommand actual) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getIndex(), actual.getIndex());","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivateRemark(), actual.getEpp().getPrivateRemark());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivateAddress(), actual.getEpp().getPrivateAddress());","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivateRating(), actual.getEpp().getPrivateRating());","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivatePhone(), actual.getEpp().getPrivatePhone());","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"        assertEquals(expected.getEpp().getPrivateEmail(), actual.getEpp().getPrivateEmail());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":95}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.testutil.Assert;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    public void constructor_invalidTagColourName_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"        String invalidTagColourName \u003d \"\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagColourName));","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null tag name","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"    public void isValidTagColour() {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"        // null tag name","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagColour(null));","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":12,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.File;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.rules.TemporaryFolder;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String TEST_DATA_FOLDER \u003d FileUtil.getPath(\"./src/test/data/JsonUserPrefsStorageTest/\");","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() throws DataConversionException {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        readUserPrefs(null);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() throws DataConversionException {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        thrown.expect(DataConversionException.class);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        readUserPrefs(\"NotJsonFormatUserPrefs.json\");","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        /* IMPORTANT: Any code below an exception-throwing line (like the one above) will be ignored.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * That means you should not have more than one exception test in one method","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private String addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER + userPrefsFileInTestDataFolder","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                : null;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(1000, 500, 300, 100);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"        userPrefs.setAddressBookFilePath(\"myteammanager.xml\");","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookName(\"TypicalAddressBookName\");","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return userPrefs;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        saveUserPrefs(null, \"SomeFile.json\");","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        thrown.expect(NullPointerException.class);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        saveUserPrefs(new UserPrefs(), null);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(1200, 200, 0, 2);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String pefsFilePath \u003d testFolder.getRoot() + File.separator + \"TempPrefs.json\";","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        original.setGuiSettings(5, 5, 5, 5);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":134}},{"path":"src/test/java/seedu/address/testutil/EditPersonPrivacyBuilder.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lohtianwei"},"content":"//@@author lohtianwei","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.logic.commands.TogglePrivacyCommand.EditPersonPrivacy;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lohtianwei"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lohtianwei"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lohtianwei"},"content":" * A utility class to help with building EditPersonPrivacy objects.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lohtianwei"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lohtianwei"},"content":"public class EditPersonPrivacyBuilder {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lohtianwei"},"content":"    private EditPersonPrivacy epp;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder() {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lohtianwei"},"content":"        epp \u003d new EditPersonPrivacy();","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder(EditPersonPrivacy epp) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lohtianwei"},"content":"        this.epp \u003d new EditPersonPrivacy(epp);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lohtianwei"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"     * Returns an {@code EditPersonPrivacy} with fields containing {@code person}\u0027s privacy details","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lohtianwei"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder(Person p) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lohtianwei"},"content":"        epp \u003d new EditPersonPrivacy();","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateAddress(p.getAddress().isPrivate());","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateEmail(p.getEmail().isPrivate());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivatePhone(p.getPhone().isPrivate());","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateRemark(p.getRemark().isPrivate());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lohtianwei"},"content":"        epp.setPrivateRating(p.getRating().isPrivate());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setPhonePrivate(String phone) {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lohtianwei"},"content":"        if (phone.equals(\"Optional[true]\") || phone.equals(\"true\")) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivatePhone(true);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lohtianwei"},"content":"        } else if (phone.equals(\"Optional[false]\") || phone.equals(\"false\")) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivatePhone(false);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of phone should be true or false\");","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setEmailPrivate(String email) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lohtianwei"},"content":"        if (email.equals(\"Optional[true]\") || email.equals(\"true\")) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateEmail(true);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lohtianwei"},"content":"        } else if (email.equals(\"Optional[false]\") || email.equals(\"false\")) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateEmail(false);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of email should be true or false\");","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setAddressPrivate(String address) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lohtianwei"},"content":"        if (address.equals(\"Optional[true]\") || address.equals(\"true\")) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateAddress(true);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lohtianwei"},"content":"        } else if (address.equals(\"Optional[false]\") || address.equals(\"false\")) {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateAddress(false);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of address should be true or false\");","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setRatingPrivate(String rating) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lohtianwei"},"content":"        if (rating.equals(\"Optional[true]\") || rating.equals(\"true\")) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRating(true);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lohtianwei"},"content":"        } else if (rating.equals(\"Optional[false]\") || rating.equals(\"false\")) {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRating(false);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of rating should be true or false\");","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacyBuilder setRemarkPrivate(String remark) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lohtianwei"},"content":"        if (remark.equals(\"Optional[true]\") || remark.equals(\"true\")) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRemark(true);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lohtianwei"},"content":"        } else if (remark.equals(\"Optional[false]\") || remark.equals(\"false\")) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lohtianwei"},"content":"            epp.setPrivateRemark(false);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lohtianwei"},"content":"        } else {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lohtianwei"},"content":"            throw new IllegalArgumentException(\"Privacy of remark should be true or false\");","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lohtianwei"},"content":"        return this;","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lohtianwei"},"content":"    public EditPersonPrivacy build() {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lohtianwei"},"content":"        return epp;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":89,"-":2}},{"path":"src/test/java/seedu/address/testutil/TeamBuilder.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":" * A utility class to help with building a TeamList.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"//@@author Codee","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TeamBuilder {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_TEAM_NAME \u003d \"Arsenal\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private TeamName teamName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TeamBuilder() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        teamName \u003d new TeamName(DEFAULT_TEAM_NAME);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Initializes the TeamBuilder with the data of {@code teamToCopy}.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public TeamBuilder(Team teamToCopy) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        teamName \u003d teamToCopy.getTeamName();","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Sets the {@code TeamName} of the {@code Team} that we are building.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public TeamBuilder withTeamName(String teamName) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.teamName \u003d new TeamName(teamName);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return this;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Team build() {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Team(teamName);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":8,"-":31}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_17;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_2;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_MIDFIELD;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_STRIKER;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RATING_0;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RATING_1;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lohtianwei"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withPhone(\"85355255\").withTags(\"friends\").withRating(\"0\")","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withPosition(\"1\").withJerseyNumber(\"1\").build();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").withRating(\"1\")","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withPosition(\"2\").withJerseyNumber(\"2\").build();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRating(\"2\")","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withPosition(\"3\").withJerseyNumber(\"3\").build();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withRating(\"3\")","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withPosition(\"4\").withJerseyNumber(\"4\").build();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withRating(\"4\")","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withPosition(\"1\").withJerseyNumber(\"5\").build();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withRating(\"5\")","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withPosition(\"2\").withJerseyNumber(\"6\").build();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withRemark(\"Could be famous\").withRating(\"0\")","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withPosition(\"3\").withJerseyNumber(\"7\").build();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Manually added","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2)","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRating(VALID_RATING_1)","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .withPosition(VALID_POSITION_MIDFIELD).withJerseyNumber(VALID_JERSEY_NUMBER_17)","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"            try {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                ab.addPerson(person);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                throw new AssertionError(\"not possible\");","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return ab;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lohtianwei"},"content":"    //@@author lohtianwei","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lohtianwei"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lohtianwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lohtianwei"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsSortedByAddress() {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lohtianwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DANIEL, ALICE, BENSON, GEORGE, FIONA, ELLE, CARL));","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lohtianwei"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsSortedByEmail() {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lohtianwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, GEORGE, DANIEL, CARL, BENSON, FIONA, ELLE));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lohtianwei"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsSortedByPhone() {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lohtianwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, DANIEL, ELLE, FIONA, GEORGE, CARL, BENSON));","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lohtianwei"},"content":"    public static AddressBook getSortedAddressBook(String field, String order) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lohtianwei"},"content":"        AddressBook ab \u003d new AddressBook();","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lohtianwei"},"content":"        List\u003cPerson\u003e personList;","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lohtianwei"},"content":"        switch(field) {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"lohtianwei"},"content":"        case \"name\":","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersons();","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"lohtianwei"},"content":"        case \"phone\":","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersonsSortedByPhone();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"lohtianwei"},"content":"        case \"email\":","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersonsSortedByEmail();","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"lohtianwei"},"content":"        case \"address\":","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersonsSortedByAddress();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"lohtianwei"},"content":"            break;","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"lohtianwei"},"content":"        default:","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"lohtianwei"},"content":"            personList \u003d getTypicalPersons();","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"lohtianwei"},"content":"        if (order.equals(\"desc\")) {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"lohtianwei"},"content":"            Collections.reverse(personList);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"lohtianwei"},"content":"        for (Person person : personList) {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"lohtianwei"},"content":"            try {","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"lohtianwei"},"content":"                ab.addPerson(person);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"lohtianwei"},"content":"            } catch (DuplicatePersonException e) {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"lohtianwei"},"content":"                assert false : \"not possible\";","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"lohtianwei"},"content":"            }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"lohtianwei"},"content":"        }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"lohtianwei"},"content":"        return ab;","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"lohtianwei"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"lohtianwei"},"content":"    public static AddressBook getEmptyAddressBook() {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"lohtianwei"},"content":"        AddressBook ab \u003d new AddressBook();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"lohtianwei"},"content":"        return ab;","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"lohtianwei"},"content":"    }","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"lohtianwei"},"content":"}","isFullCredit":false}],"authorContributionMap":{"lohtianwei":59,"-":91}},{"path":"src/test/java/seedu/address/testutil/TypicalTags.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.tag.UniqueTagList;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":" * A utility class containing a list of {@code Tag} objects to be used in tests.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"public class TypicalTags {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":"    public static final Tag GOOD_ATTITUDE \u003d new Tag(\"goodAttitude\", \"teal\");","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":"    public static final Tag FRIEND \u003d new Tag(\"friends\", \"teal\");","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"    private TypicalTags() {} //prevents instantiation","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"     * Returns an {@code AddressBook} with all the typical teams.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    public static AddressBook getTypicalAddressBook() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"        AddressBook ab \u003d new AddressBook();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"        for (Tag tag : getTypicalTags()) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"            try {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"                ab.addTag(tag);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"            } catch (UniqueTagList.DuplicateTagException e) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"                throw new AssertionError(\"not possible\");","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"codeeong"},"content":"            }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        return ab;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"    public static List\u003cTag\u003e getTypicalTags() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(GOOD_ATTITUDE, FRIEND));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":43}},{"path":"src/test/java/seedu/address/ui/PlayerDetailsTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertPlayerDetailsDisplaysPerson;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import guitests.guihandles.PlayerDetailsHandle;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author Codee","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PlayerDetailsTest extends GuiUnitTest {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void display() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no tags","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Person personWithNoTags \u003d new PersonBuilder().withTags(new String[0]).build();","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        PlayerDetails playerDetails \u003d new PlayerDetails(personWithNoTags);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        uiPartRule.setUiPart(playerDetails);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertCardDisplay(playerDetails, personWithNoTags);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        PlayerDetails playerDetails \u003d new PlayerDetails(person);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(playerDetails.equals(playerDetails));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(playerDetails.equals(null));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(playerDetails.equals(0));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different person, same index -\u003e returns false","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person differentPerson \u003d new PersonBuilder().withName(\"differentName\").build();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(playerDetails.equals(new PlayerDetails(differentPerson)));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Asserts that {@code playerDetails} displays the details of {@code expectedPerson} correctly","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private void assertCardDisplay(PlayerDetails playerDetails, Person expectedPerson) {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        PlayerDetailsHandle playerDetailsHandle \u003d new PlayerDetailsHandle(playerDetails.getRoot());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // verify player details are displayed correctly","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertPlayerDetailsDisplaysPerson(expectedPerson, playerDetailsHandle);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":13,"-":44}},{"path":"src/test/java/seedu/address/ui/TeamDisplayTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"codeeong"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"codeeong"},"content":"import static seedu.address.testutil.EventsUtil.postNow;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertTeamDisplayEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import org.junit.Before;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"codeeong"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"codeeong"},"content":"import guitests.guihandles.TeamDisplayHandle;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"codeeong"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import seedu.address.commons.events.ui.ShowNewTeamNameEvent;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.Team;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"import seedu.address.model.team.TeamName;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"codeeong"},"content":"import seedu.address.testutil.TeamBuilder;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"codeeong"},"content":" * tests for TeamDisplay UI Component.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"codeeong"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"codeeong"},"content":"/** @@author Codee */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"codeeong"},"content":"public class TeamDisplayTest extends GuiUnitTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"    private static final String NEW_TEAM_NAME \u003d \"myTeam\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"    private static final ShowNewTeamNameEvent SHOW_NEW_TEAM_NAME_EVENT \u003d new ShowNewTeamNameEvent(NEW_TEAM_NAME);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"codeeong"},"content":"    private TeamDisplay teamDisplay;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"codeeong"},"content":"    private TeamDisplayHandle teamDisplayHandle;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"    private ObservableList\u003cTeam\u003e teamList;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"    @Before","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"codeeong"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        teamList \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        teamList.add(new TeamBuilder().withTeamName(\"Arsenal\").build());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        teamList.add(new TeamBuilder().withTeamName(\"Chelsea\").build());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        teamDisplay \u003d new TeamDisplay(teamList);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"        uiPartRule.setUiPart(teamDisplay);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"codeeong"},"content":"        teamDisplayHandle \u003d new TeamDisplayHandle(teamDisplay.getRoot());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"    public void display() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"codeeong"},"content":"        assertTeamDisplay(teamDisplay, teamList);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"codeeong"},"content":"     * Asserts that {@code personCard} displays the details of {@code expectedPerson} correctly and matches","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"codeeong"},"content":"     * {@code expectedId}.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"    private void assertTeamDisplay(TeamDisplay teamDisplay, ObservableList\u003cTeam\u003e teamlist) {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"codeeong"},"content":"        guiRobot.pauseForHuman();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"codeeong"},"content":"        // verify team names are displayed correctly","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"codeeong"},"content":"        assertTeamDisplayEquals(teamDisplay, teamDisplayHandle);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"    @Test","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"    public void handleShowNewTeamNameEvent() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"        postNow(SHOW_NEW_TEAM_NAME_EVENT);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"        // verify team names are displayed correctly after event","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"        guiRobot.pauseForHuman();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"        teamList.add(new Team(new TeamName(NEW_TEAM_NAME)));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"        TeamDisplay expectedTeamDisplay \u003d new TeamDisplay(teamList);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"codeeong"},"content":"        teamDisplayHandle \u003d new TeamDisplayHandle(teamDisplay.getRoot());","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"codeeong"},"content":"        // verify team names are displayed correctly","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"codeeong"},"content":"        assertTeamDisplayEquals(expectedTeamDisplay, teamDisplayHandle);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"codeeong"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":65,"-":4}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.Rule;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.rules.ExpectedException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.rules.TemporaryFolder;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.Assert;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiPartTest {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ExpectedException thrown \u003d ExpectedException.none();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Rule","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public TemporaryFolder testFolder \u003d new TemporaryFolder();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.getRoot().toURI().toURL(), MISSING_FILE_PATH);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertNotNull(testFilePathInView + \" does not exist.\", testFileUrl);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return testFileUrl;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @FXML","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":118}},{"path":"src/test/java/seedu/address/ui/testutil/GuiTestAssert.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"codeeong"},"content":"import static org.junit.Assert.fail;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"codeeong"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import guitests.guihandles.PersonCardHandle;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import guitests.guihandles.PersonListPanelHandle;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"codeeong"},"content":"import guitests.guihandles.PlayerDetailsHandle;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"codeeong"},"content":"import guitests.guihandles.TeamDisplayHandle;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"codeeong"},"content":"import seedu.address.ui.PersonCard;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"codeeong"},"content":"import seedu.address.ui.TeamDisplay;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing GUI tests.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class GuiTestAssert {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"    private static final String LABEL_DEFAULT_STYLE \u003d \"label\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void assertCardEquals(PersonCardHandle expectedCard, PersonCardHandle actualCard) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedCard.getPosition(), actualCard.getPosition());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedCard.getRating(), actualCard.getRating());","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getName(), actualCard.getName());","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedCard.getTeamName(), actualCard.getTeamName());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getTags(), actualCard.getTags());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"codeeong"},"content":"        expectedCard.getTags().forEach(tag -\u003e","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"codeeong"},"content":"                assertEquals(expectedCard.getTagStyleClasses(tag), actualCard.getTagStyleClasses(tag)));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"codeeong"},"content":"     * Asserts that {@code actualTeamDisplay} displays the details of {@code expectedTeamDisplay}.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void assertTeamDisplayEquals(TeamDisplay expectedTeamDisplay, TeamDisplayHandle actualTeamDisplay) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedTeamDisplay.getTeams().forEach(team -\u003e","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                assertEquals(expectedTeamDisplay.getTeams().toString(), actualTeamDisplay.getTeams().toString()));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedPerson}.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static void assertCardDisplaysPerson(Person expectedPerson, PersonCardHandle actualCard) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getName().fullName, actualCard.getName());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedPerson.getTeamName().toString(), actualCard.getTeamName());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedPerson.getRating().value, actualCard.getRating());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedPerson.getPosition().getPositionName(), actualCard.getPosition());","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"codeeong"},"content":"        assertTagsEqual(expectedPerson, actualCard);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"codeeong"},"content":"     * Asserts that {@code actualPlayerDetails} displays the details of {@code expectedPerson}.","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //@@author Codee","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static void assertPlayerDetailsDisplaysPerson(Person expectedPerson, PlayerDetailsHandle actualPlayerPanel) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getName().fullName, actualPlayerPanel.getName());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getAddress().toString(), actualPlayerPanel.getAddress());","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getEmail().value, actualPlayerPanel.getEmail());","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getJerseyNumber().value, actualPlayerPanel.getJerseyNumber());","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getPhone().value, actualPlayerPanel.getPhone());","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedPerson.getRemark().toString(), actualPlayerPanel.getRemarks());","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //@@author","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"codeeong"},"content":"     * Returns the color style for {@code tagName}\u0027s label. The tag\u0027s color is determined by looking up the color","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"codeeong"},"content":"     * of {@tagColour}","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"codeeong"},"content":"     *","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"codeeong"},"content":"     * @see PersonCard getTagColorStyleFor(String)","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"codeeong"},"content":"    private static String getTagColorStyleFor(String tagName) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"codeeong"},"content":"        switch (tagName) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"codeeong"},"content":"        case \"classmates\":","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"codeeong"},"content":"        case \"owesMoney\":","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"codeeong"},"content":"        case \"colleagues\":","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"codeeong"},"content":"        case \"neighbours\":","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"codeeong"},"content":"        case \"family\":","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"codeeong"},"content":"        case \"friend\":","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"codeeong"},"content":"        case \"friends\":","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"codeeong"},"content":"        case \"husband\":","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"codeeong"},"content":"        case \"redCard\":","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"codeeong"},"content":"        case \"yellowCard\":","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"codeeong"},"content":"        case \"goodAttitude\":","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"codeeong"},"content":"        case \"badAttitude\":","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"codeeong"},"content":"        case \"injured\":","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"codeeong"},"content":"        case \"fastRunner\":","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"codeeong"},"content":"            return \"teal\";","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"codeeong"},"content":"        default:","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"codeeong"},"content":"            fail(tagName + \" does not have a color assigned.\");","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"codeeong"},"content":"            return \"\";","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"codeeong"},"content":"        }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"codeeong"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"codeeong"},"content":"    /**","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"codeeong"},"content":"     * Asserts that the tags in {@code actualCard} matches all the tags in {@code expectedPerson} with the correct","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"codeeong"},"content":"     * color.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"codeeong"},"content":"     */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"codeeong"},"content":"    private static void assertTagsEqual(Person expectedPerson, PersonCardHandle actualCard) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"codeeong"},"content":"        List\u003cString\u003e expectedTags \u003d expectedPerson.getTags().stream()","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"codeeong"},"content":"                .map(tag -\u003e tag.tagName).collect(Collectors.toList());","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"codeeong"},"content":"        assertEquals(expectedTags, actualCard.getTags());","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"codeeong"},"content":"        expectedTags.forEach(tag -\u003e","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"codeeong"},"content":"                assertEquals(Arrays.asList(LABEL_DEFAULT_STYLE, getTagColorStyleFor(tag)),","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"codeeong"},"content":"                        actualCard.getTagStyleClasses(tag)));","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * in the correct order.","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, Person... persons) {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.length; i++) {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertCardDisplaysPerson(persons[i], personListPanelHandle.getPersonCardHandle(i));","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * in the correct order.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, List\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertListMatching(personListPanelHandle, persons.toArray(new Person[0]));","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Asserts the size of the list in {@code personListPanelHandle} equals to {@code size}.","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void assertListSize(PersonListPanelHandle personListPanelHandle, int size) {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        int numberOfPeople \u003d personListPanelHandle.getListSize();","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(size, numberOfPeople);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}.","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expected, resultDisplayHandle.getText());","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":70,"-":81}},{"path":"src/test/java/systemtests/AddCommandSystemTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package systemtests;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVATAR_MAC_LINUX;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AVATAR_WINDOWS;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVATAR_NO_FILE;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVATAR_TYPE;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JERSEY_NUMBER_DESC;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RATING_DESC;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JERSEY_NUMBER_DESC_17;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_MIDFILED;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_STRIKER;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RATING_DESC_0;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RATING_DESC_1;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVATAR_MAC_LINUX;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AVATAR_WINDOWS;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_17;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_2;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_STRIKER;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RATING_0;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.UNSPECIFIED_FIELD;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"import com.sun.javafx.PlatformUtil;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"import seedu.address.model.person.JerseyNumber;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Position;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Rating;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"public class AddCommandSystemTest extends AddressBookSystemTest {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void add() throws Exception {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model model \u003d getModel();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /* ------------------------ Perform add operations on the shown unfiltered list ----------------------------- */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /* Case: add a person without tags to a non-empty address book, command with leading spaces and trailing spaces","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * -\u003e added","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Avatar.setUpPlaceholderForTest();","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person toAdd \u003d AMY;","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /* Case: undo adding Amy to the list -\u003e Amy deleted */","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /* Case: redo adding Amy to the list -\u003e Amy added again */","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except name -\u003e added */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND  + \" \" + RATING_DESC_0 + \"   \" + POSITION_DESC_STRIKER + \"   \"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except phone -\u003e added */","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"codeeong"},"content":"                + TAG_DESC_FRIEND + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except email -\u003e added */","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND  + \" \" + RATING_DESC_0 + \"   \" + POSITION_DESC_STRIKER + \"   \"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /* Case: add a person with all fields same as another person in the address book except address -\u003e added */","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_BOB","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND  + \" \" + RATING_DESC_0 + \"   \" + POSITION_DESC_STRIKER + \"   \"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /* Case: add to empty address book -\u003e added */","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        deleteAllPersons();","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandSuccess(ALICE);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /* Case: add a person with tags, command with parameters in random order -\u003e added */","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        toAdd \u003d BOB;","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + NAME_DESC_BOB","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"codeeong"},"content":"                + TAG_DESC_HUSBAND + EMAIL_DESC_BOB + POSITION_DESC_MIDFILED + JERSEY_NUMBER_DESC_17 + RATING_DESC_1;","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /* Case: add a person, missing tags -\u003e added */","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertCommandSuccess(HOON);","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /* Case: missing phone -\u003e added */","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .withPhone(UNSPECIFIED_FIELD).withTags().withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /* Case: missing address -\u003e added */","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .withAddress(UNSPECIFIED_FIELD).withTags().withRating(VALID_RATING_0)","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + RATING_DESC_0","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /* Case: missing rating -\u003e added */","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        toAdd \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags().withRating(UNSPECIFIED_FIELD)","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withPosition(VALID_POSITION_STRIKER).withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (PlatformUtil.isWindows()) {","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            toAdd \u003d new PersonBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY).withAvatar(VALID_AVATAR_WINDOWS)","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    .withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0).withJerseyNumber(VALID_JERSEY_NUMBER_17)","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                            .build();","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"            command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + EMAIL_DESC_BOB + AVATAR_WINDOWS","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    + PHONE_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0 + JERSEY_NUMBER_DESC_17 + POSITION_DESC_STRIKER","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } else if (PlatformUtil.isMac() || PlatformUtil.isLinux()) {","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            toAdd \u003d new PersonBuilder().withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                    .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY).withAvatar(VALID_AVATAR_MAC_LINUX)","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    .withTags(VALID_TAG_FRIEND).withRating(VALID_RATING_0).withJerseyNumber(VALID_JERSEY_NUMBER_17)","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    .build();","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"            command \u003d AddCommand.COMMAND_WORD + NAME_DESC_BOB + EMAIL_DESC_BOB + AVATAR_MAC_LINUX","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    + PHONE_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0 + JERSEY_NUMBER_DESC_17 + POSITION_DESC_STRIKER","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            assertCommandSuccess(command, toAdd);","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /* -------------------------- Perform add operation on the shown filtered list ------------------------------ */","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /* Case: filters the person list before adding -\u003e added */","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertCommandSuccess(IDA);","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /* ------------------------ Perform add operation while a person card is selected --------------------------- */","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /* Case: selects first card in the person list, add a person -\u003e added, card selection remains unchanged */","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        selectPerson(Index.fromOneBased(1));","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertCommandSuccess(CARL);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /* ----------------------------------- Perform invalid add operations --------------------------------------- */","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        /* Case: add a duplicate person -\u003e rejected */","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        command \u003d PersonUtil.getAddCommand(HOON);","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /* Case: add a duplicate person except with different tags -\u003e rejected */","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // \"friends\" is an existing tag used in the default model, see TypicalPersons#ALICE","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // This test will fail if a new tag that is not in the model is used, see the bug documented in","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // AddressBook#addPerson(Person)","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        command \u003d PersonUtil.getAddCommand(HOON) + \" \" + PREFIX_TAG.getPrefix() + \"friends\";","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        /* Case: missing name -\u003e rejected */","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        /* Case: missing email -\u003e rejected */","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + RATING_DESC_0","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"                + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /* Case: invalid keyword -\u003e rejected */","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        command \u003d \"adds \" + PersonUtil.getPersonDetails(toAdd);","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Messages.MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        /* Case: invalid name -\u003e rejected */","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + INVALID_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Name.MESSAGE_NAME_CONSTRAINTS);","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        /* Case: invalid phone -\u003e rejected */","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Phone.MESSAGE_PHONE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /* Case: invalid email -\u003e rejected */","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + INVALID_EMAIL_DESC + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Email.MESSAGE_EMAIL_CONSTRAINTS);","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        /* Case: invalid address -\u003e rejected */","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + INVALID_ADDRESS_DESC","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Address.MESSAGE_ADDRESS_CONSTRAINTS);","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        /* Case: invalid tag -\u003e rejected */","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Tag.MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        //@@author lithiumlkid","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"        /* Case: invalid rating -\u003e rejected */","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"                 + INVALID_RATING_DESC + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Rating.MESSAGE_RATING_CONSTRAINTS);","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"        /* Case: invalid position -\u003e rejected */","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"                 + RATING_DESC_0 + INVALID_POSITION_DESC + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Position.MESSAGE_POSITION_CONSTRAINTS);","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        /* Case: invalid jersey number -\u003e rejected */","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"                 + RATING_DESC_0 + POSITION_DESC_STRIKER + INVALID_JERSEY_NUMBER_DESC;","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, JerseyNumber.MESSAGE_JERSEY_NUMBER_CONSTRAINTS);","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"        /* Case: invalid jersey avatar -\u003e rejected */","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2 + INVALID_AVATAR_NO_FILE;","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, AddCommand.MESSAGE_FILE_NOT_FOUND);","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        /* Case: invalid jersey avatar -\u003e rejected */","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        command \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"                + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2 + INVALID_AVATAR_TYPE;","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, Avatar.MESSAGE_AVATAR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Executes the {@code AddCommand} that adds {@code toAdd} to the model and asserts that the,\u003cbr\u003e","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * 1. Command box displays an empty string.\u003cbr\u003e","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * 2. Command box has the default style class.\u003cbr\u003e","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * 3. Result display box displays the success message of executing {@code AddCommand} with the details of","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * {@code toAdd}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code PersonListPanel} equal to the corresponding components in","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * the current model added with {@code toAdd}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * 5. Browser url and selected card remain unchanged.\u003cbr\u003e","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * 6. Status bar\u0027s sync status changes.\u003cbr\u003e","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * Verifications 1, 3 and 4 are performed by","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(Person toAdd) {","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"        assertCommandSuccess(PersonUtil.getAddCommand(toAdd), toAdd);","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(Person)}. Executes {@code command}","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"     * instead.","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(Person)","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Person toAdd) {","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d getModel();","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"            expectedModel.addPerson(toAdd);","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException dpe) {","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"toAdd already exists in the model.\");","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"        // TODO: place holder for success message, change to proper assert method","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"        String expectedResultMessage \u003d String.format(AddCommand.MESSAGE_SUCCESS, toAdd);","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage);","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Person)} except asserts that","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"     * the,\u003cbr\u003e","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"     * 1. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"     * 2. {@code Model}, {@code Storage} and {@code PersonListPanel} equal to the corresponding components in","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"     * {@code expectedModel}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"     * @see AddCommandSystemTest#assertCommandSuccess(String, Person)","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"        executeCommand(command);","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"        assertSelectedCardUnchanged();","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsDefaultStyle();","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"     * Executes {@code command} and asserts that the,\u003cbr\u003e","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * 1. Command box displays {@code command}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"     * 2. Command box has the error style class.\u003cbr\u003e","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * 3. Result display box displays {@code expectedResultMessage}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"     * 4. {@code Model}, {@code Storage} and {@code PersonListPanel} remain unchanged.\u003cbr\u003e","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"     * 5. Browser url, selected card and status bar remain unchanged.\u003cbr\u003e","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"     * Verifications 1, 3 and 4 are performed by","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d getModel();","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"        executeCommand(command);","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"        assertSelectedCardUnchanged();","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsErrorStyle();","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"        assertStatusBarUnchanged();","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":5,"-":359}},{"path":"src/test/java/systemtests/AddressBookSystemTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package systemtests;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_INITIAL;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.ui.StatusBarFooter.SYNC_STATUS_UPDATED;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Date;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.After;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.Before;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.BeforeClass;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.ClassRule;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import guitests.guihandles.CommandBoxHandle;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import guitests.guihandles.MainMenuHandle;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import guitests.guihandles.MainWindowHandle;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import guitests.guihandles.PersonListPanelHandle;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import guitests.guihandles.ResultDisplayHandle;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import guitests.guihandles.StatusBarFooterHandle;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.TestApp;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.EventsCenter;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SelectCommand;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.CommandBox;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" * A system test class for AddressBook, which provides access to handles of GUI components and helper methods","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" * for test verification.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"public abstract class AddressBookSystemTest {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @ClassRule","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ClockRule clockRule \u003d new ClockRule();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_DEFAULT_STYLE \u003d Arrays.asList(\"text-input\", \"text-field\");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e COMMAND_BOX_ERROR_STYLE \u003d","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            Arrays.asList(\"text-input\", \"text-field\", CommandBox.ERROR_STYLE_CLASS);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MainWindowHandle mainWindowHandle;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private TestApp testApp;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private SystemTestSetupHelper setupHelper;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @BeforeClass","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void setupBeforeClass() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        SystemTestSetupHelper.initialize();","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Before","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setupHelper \u003d new SystemTestSetupHelper();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        testApp \u003d setupHelper.setupApplication(this::getInitialData, getDataFileLocation());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        mainWindowHandle \u003d setupHelper.setupMainWindowHandle();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertApplicationStartingStateIsCorrect();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @After","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void tearDown() throws Exception {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setupHelper.tearDownStage();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EventsCenter.clearSubscribers();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns the data to be loaded into the file in {@link #getDataFileLocation()}.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    protected AddressBook getInitialData() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return TypicalPersons.getTypicalAddressBook();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns the directory of the data file.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    protected String getDataFileLocation() {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return TestApp.SAVE_LOCATION_FOR_TESTING;","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public MainWindowHandle getMainWindowHandle() {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return mainWindowHandle;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public CommandBoxHandle getCommandBox() {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getCommandBox();","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonListPanelHandle getPersonListPanel() {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getPersonListPanel();","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public MainMenuHandle getMainMenu() {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getMainMenu();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getStatusBarFooter();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return mainWindowHandle.getResultDisplay();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes {@code command} in the application\u0027s {@code CommandBox}.","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Method returns after UI components have been updated.","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    protected void executeCommand(String command) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        rememberStates();","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Injects a fixed clock before executing a command so that the time stamp shown in the status bar","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // after each command is predictable and also different from the previous command.","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        clockRule.setInjectedClockToCurrentTime();","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        mainWindowHandle.getCommandBox().run(command);","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Displays all persons in the address book.","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected void showAllPersons() {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        executeCommand(ListCommand.COMMAND_WORD);","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(getModel().getAddressBook().getPersonList().size(), getModel().getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Displays all persons with any parts of their names matching {@code keyword} (case-insensitive).","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    protected void showPersonsWithName(String keyword) {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        executeCommand(FindCommand.COMMAND_WORD + \" \" + keyword);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(getModel().getFilteredPersonList().size() \u003c getModel().getAddressBook().getPersonList().size());","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Selects the person at {@code index} of the displayed list.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected void selectPerson(Index index) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + index.getOneBased());","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(index.getZeroBased(), getPersonListPanel().getSelectedCardIndex());","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Deletes all persons in the address book.","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    protected void deleteAllPersons() {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        executeCommand(ClearCommand.COMMAND_WORD);","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(0, getModel().getAddressBook().getPersonList().size());","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Asserts that the {@code CommandBox} displays {@code expectedCommandInput}, the {@code ResultDisplay} displays","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code expectedResultMessage}, the model and storage contains the same person objects as {@code expectedModel}","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * and the person list panel displays the persons in the model correctly.","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected void assertApplicationDisplaysExpected(String expectedCommandInput, String expectedResultMessage,","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            Model expectedModel) {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedCommandInput, getCommandBox().getInput());","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedResultMessage, getResultDisplay().getText());","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, getModel());","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getAddressBook(), testApp.readStorageAddressBook());","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertListMatching(getPersonListPanel(), expectedModel.getFilteredPersonList());","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Calls {@code BrowserPanelHandle}, {@code PersonListPanelHandle} and {@code StatusBarFooterHandle} to remember","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * their current state.","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void rememberStates() {","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        StatusBarFooterHandle statusBarFooterHandle \u003d getStatusBarFooter();","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        statusBarFooterHandle.rememberSaveLocation();","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        statusBarFooterHandle.rememberSyncStatus();","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        getPersonListPanel().rememberSelectedPersonCard();","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Asserts that the previously selected card is now deselected and the browser\u0027s url remains displaying the details","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * of the previously selected person.","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    protected void assertSelectedCardDeselected() {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(getPersonListPanel().isAnyCardSelected());","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Asserts that the browser\u0027s url is changed to display the details of the person in the person list panel at","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * {@code expectedSelectedCardIndex}, and only the card at {@code expectedSelectedCardIndex} is selected.","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @see PersonListPanelHandle#isSelectedPersonCardChanged()","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    protected void assertSelectedCardChanged(Index expectedSelectedCardIndex) {","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedSelectedCardIndex.getZeroBased(), getPersonListPanel().getSelectedCardIndex());","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Asserts that the browser\u0027s url and the selected card in the person list panel remain unchanged.","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @see PersonListPanelHandle#isSelectedPersonCardChanged()","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    protected void assertSelectedCardUnchanged() {","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertFalse(getPersonListPanel().isSelectedPersonCardChanged());","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Asserts that the command box\u0027s shows the default style.","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    protected void assertCommandBoxShowsDefaultStyle() {","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertEquals(COMMAND_BOX_DEFAULT_STYLE, getCommandBox().getStyleClass());","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * Asserts that the command box\u0027s shows the error style.","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    protected void assertCommandBoxShowsErrorStyle() {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(COMMAND_BOX_ERROR_STYLE, getCommandBox().getStyleClass());","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Asserts that the entire status bar remains the same.","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    protected void assertStatusBarUnchanged() {","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertFalse(handle.isSyncStatusChanged());","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Asserts that only the sync status in the status bar was changed to the timing of","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * {@code ClockRule#getInjectedClock()}, while the save location remains the same.","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    protected void assertStatusBarUnchangedExceptSyncStatus() {","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        StatusBarFooterHandle handle \u003d getStatusBarFooter();","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        String timestamp \u003d new Date(clockRule.getInjectedClock().millis()).toString();","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        String expectedSyncStatus \u003d String.format(SYNC_STATUS_UPDATED, timestamp);","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertEquals(expectedSyncStatus, handle.getSyncStatus());","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertFalse(handle.isSaveLocationChanged());","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * Asserts that the starting state of the application is correct.","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private void assertApplicationStartingStateIsCorrect() {","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"            assertEquals(\"\", getCommandBox().getInput());","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            assertEquals(\"\", getResultDisplay().getText());","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            assertListMatching(getPersonListPanel(), getModel().getFilteredPersonList());","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"codeeong"},"content":"            //assertEquals that the detail card is correct","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"            assertEquals(\"./\" + testApp.getStorageSaveLocation(), getStatusBarFooter().getSaveLocation());","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            assertEquals(SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Starting state is wrong.\", e);","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Returns a defensive copy of the current model.","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    protected Model getModel() {","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return testApp.getModel();","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":2,"-":264}},{"path":"src/test/java/systemtests/EditCommandSystemTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package systemtests;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"codeeong"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVATAR_NO_FILE;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AVATAR_TYPE;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JERSEY_NUMBER_DESC_17;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_MIDFILED;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_STRIKER;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RATING_DESC_0;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"codeeong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RATING_DESC_1;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JERSEY_NUMBER_2;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_MIDFIELD;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RATING_1;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.KEYWORD_MATCHING_MEIER;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Avatar;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"public class EditCommandSystemTest extends AddressBookSystemTest {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void edit() throws Exception {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model model \u003d getModel();","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        /* ----------------- Performing edit operation while an unfiltered list is being shown ---------------------- */","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        /* Case: edit all fields, command with leading spaces, trailing spaces and multiple spaces between each field","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"         * -\u003e edited","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String command \u003d \" \" + EditCommand.COMMAND_WORD + \"  \" + index.getOneBased() + \"  \" + NAME_DESC_BOB + \"  \"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + \" \" + EMAIL_DESC_BOB + \"  \" + ADDRESS_DESC_BOB + \" \" + TAG_DESC_HUSBAND + \" \"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + RATING_DESC_1 + \" \" + POSITION_DESC_MIDFILED + \" \" + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"codeeong"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withRating(VALID_RATING_1).withPosition(VALID_POSITION_MIDFIELD)","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withJerseyNumber(VALID_JERSEY_NUMBER_2).build();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /* Case: undo editing the last person in the list -\u003e last person restored */","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        command \u003d UndoCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedResultMessage \u003d UndoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /* Case: redo editing the last person in the list -\u003e last person edited again */","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        command \u003d RedoCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedResultMessage \u003d RedoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updatePerson(","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                getModel().getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), editedPerson);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedResultMessage);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /* Case: edit a person with new values same as existing values -\u003e edited */","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + POSITION_DESC_MIDFILED + RATING_DESC_1","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + JERSEY_NUMBER_DESC_17;","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, BOB);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /* Case: edit some fields -\u003e edited */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d getModel().getFilteredPersonList().get(index.getZeroBased());","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        /* Case: clear tags -\u003e cleared */","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + PREFIX_TAG.getPrefix();","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withTags().build();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        /* ------------------ Performing edit operation while a filtered list is being shown ------------------------ */","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        /* Case: filtered person list, edit index within bounds of address book and person list -\u003e edited */","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(index.getZeroBased() \u003c getModel().getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + NAME_DESC_BOB;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        personToEdit \u003d getModel().getFilteredPersonList().get(index.getZeroBased());","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        editedPerson \u003d new PersonBuilder(personToEdit).withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, editedPerson);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /* Case: filtered person list, edit index within bounds of address book but out of bounds of person list","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * -\u003e rejected","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        showPersonsWithName(KEYWORD_MATCHING_MEIER);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        int invalidIndex \u003d getModel().getAddressBook().getPersonList().size();","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + invalidIndex + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /* --------------------- Performing edit operation while a person card is selected -------------------------- */","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /* Case: selects first card in the person list, edit a person -\u003e edited, card selection remains unchanged but","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * browser url changes","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showAllPersons();","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        selectPerson(index);","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + RATING_DESC_0 + POSITION_DESC_STRIKER + JERSEY_NUMBER_DESC_2;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // this can be misleading: card selection actually remains unchanged but the","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // browser\u0027s url is updated to reflect the new person\u0027s name","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, index, AMY, index);","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /* --------------------------------- Performing invalid edit operation -------------------------------------- */","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /* Case: invalid index (0) -\u003e rejected */","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" 0\" + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /* Case: invalid index (-1) -\u003e rejected */","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" -1\" + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /* Case: invalid index (size + 1) -\u003e rejected */","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        invalidIndex \u003d getModel().getFilteredPersonList().size() + 1;","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + invalidIndex + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /* Case: missing index -\u003e rejected */","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + NAME_DESC_BOB,","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /* Case: missing all fields -\u003e rejected */","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(),","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"                EditCommand.MESSAGE_NOT_EDITED);","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /* Case: invalid name -\u003e rejected */","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_NAME_DESC,","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"                Name.MESSAGE_NAME_CONSTRAINTS);","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        /* Case: invalid phone -\u003e rejected */","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_PHONE_DESC,","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"                Phone.MESSAGE_PHONE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /* Case: invalid email -\u003e rejected */","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_EMAIL_DESC,","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"                Email.MESSAGE_EMAIL_CONSTRAINTS);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        /* Case: invalid address -\u003e rejected */","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_ADDRESS_DESC,","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"                Address.MESSAGE_ADDRESS_CONSTRAINTS);","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Avatar.setUpPlaceholderForTest();","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /* Case: invalid tag -\u003e rejected */","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_TAG_DESC,","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                Tag.MESSAGE_TAG_CONSTRAINTS);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /* Case: invalid avatar -\u003e rejected */","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_AVATAR_NO_FILE,","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"                EditCommand.MESSAGE_FILE_NOT_FOUND);","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /* Case: invalid avatar -\u003e rejected */","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertCommandFailure(EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + INVALID_AVATAR_TYPE,","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"                Avatar.MESSAGE_AVATAR_CONSTRAINTS);","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /* Case: edit a person with new values same as another person\u0027s values -\u003e rejected */","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        executeCommand(PersonUtil.getAddCommand(BOB));","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertTrue(getModel().getAddressBook().getPersonList().contains(BOB));","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertFalse(getModel().getFilteredPersonList().get(index.getZeroBased()).equals(BOB));","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, EditCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        /* Case: edit a person with new values same as another person\u0027s values but with different tags -\u003e rejected */","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        command \u003d EditCommand.COMMAND_WORD + \" \" + index.getOneBased() + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertCommandFailure(command, EditCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Index, Person, Index)} except that","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * the browser url and selected card remain unchanged.","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @param toEdit the index of the current model\u0027s filtered list","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Index, Person, Index)","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Index toEdit, Person editedPerson) {","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, toEdit, editedPerson, null);","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String, Index)} and in addition,\u003cbr\u003e","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * 1. Asserts that result display box displays the success message of executing {@code EditCommand}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * 2. Asserts that the model related components are updated to reflect the person at index {@code toEdit} being","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * updated to values specified {@code editedPerson}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * @param toEdit the index of the current model\u0027s filtered list.","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Model, String, Index)","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Index toEdit, Person editedPerson,","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"            Index expectedSelectedCardIndex) {","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d getModel();","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"            expectedModel.updatePerson(","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    expectedModel.getFilteredPersonList().get(toEdit.getZeroBased()), editedPerson);","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        } catch (DuplicatePersonException | PersonNotFoundException e) {","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \"editedPerson is a duplicate in expectedModel, or it isn\u0027t found in the model.\");","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, expectedModel,","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), expectedSelectedCardIndex);","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Performs the same verification as {@code assertCommandSuccess(String, Model, String, Index)} except that the","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * browser url and selected card remain unchanged.","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * @see EditCommandSystemTest#assertCommandSuccess(String, Model, String, Index)","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage) {","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, expectedModel, expectedResultMessage, null);","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * 1. Asserts that the command box displays an empty string.\u003cbr\u003e","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * 2. Asserts that the result display box displays {@code expectedResultMessage}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * 3. Asserts that the model related components equal to {@code expectedModel}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * 4. Asserts that the browser url and selected card update accordingly depending on the card at","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * {@code expectedSelectedCardIndex}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * 5. Asserts that the status bar\u0027s sync status changes.\u003cbr\u003e","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * 6. Asserts that the command box has the default style class.\u003cbr\u003e","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * Verifications 1 to 3 are performed by","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertSelectedCardChanged(Index)","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String command, Model expectedModel, String expectedResultMessage,","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"            Index expectedSelectedCardIndex) {","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"        executeCommand(command);","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertApplicationDisplaysExpected(\"\", expectedResultMessage, expectedModel);","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsDefaultStyle();","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        if (expectedSelectedCardIndex !\u003d null) {","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"            assertSelectedCardChanged(expectedSelectedCardIndex);","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"            assertSelectedCardUnchanged();","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assertStatusBarUnchangedExceptSyncStatus();","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * Executes {@code command} and in addition,\u003cbr\u003e","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"     * 1. Asserts that the command box displays {@code command}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * 2. Asserts that result display box displays {@code expectedResultMessage}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * 3. Asserts that the model related components equal to the current model.\u003cbr\u003e","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * 4. Asserts that the browser url, selected card and status bar remain unchanged.\u003cbr\u003e","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * 5. Asserts that the command box has the error style.\u003cbr\u003e","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * Verifications 1 to 3 are performed by","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * {@code AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)}.\u003cbr\u003e","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * @see AddressBookSystemTest#assertApplicationDisplaysExpected(String, String, Model)","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String command, String expectedResultMessage) {","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d getModel();","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"        executeCommand(command);","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertApplicationDisplaysExpected(command, expectedResultMessage, expectedModel);","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"        assertSelectedCardUnchanged();","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsErrorStyle();","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"        assertStatusBarUnchanged();","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":6,"-":302}},{"path":"src/test/java/systemtests/HelpCommandSystemTest.java","fileType":"tests","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package systemtests;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertNotEquals;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertListMatching;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.Test;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import guitests.GuiRobot;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import guitests.guihandles.HelpWindowHandle;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SelectCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.ui.StatusBarFooter;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A system test class for the help window, which contains interaction with other UI components.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class HelpCommandSystemTest extends AddressBookSystemTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ERROR_MESSAGE \u003d \"ATTENTION!!!! : On some computers, this test may fail when run on \"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"non-headless mode as FxRobot#clickOn(Node, MouseButton...) clicks on the wrong location. We suspect \"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"that this is a bug with TestFX library that we are using. If this test fails, you have to run your \"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"tests on headless mode. See UsingGradle.adoc on how to do so.\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final GuiRobot guiRobot \u003d new GuiRobot();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void openHelpWindow() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        //use accelerator","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        getCommandBox().click();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        getResultDisplay().click();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        getPersonListPanel().click();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        getMainMenu().openHelpWindowUsingAccelerator();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        //use menu button","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        getMainMenu().openHelpWindowUsingMenu();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        //use command box","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertHelpWindowOpen();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // open help window and give it focus","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        executeCommand(HelpCommand.COMMAND_WORD);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        getMainWindowHandle().focus();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // assert that while the help window is open the UI updates correctly for a command execution","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        executeCommand(SelectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(\"\", getCommandBox().getInput());","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandBoxShowsDefaultStyle();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNotEquals(HelpCommand.SHOWING_HELP_MESSAGE, getResultDisplay().getText());","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"codeeong"},"content":"        //assertNotEquals(BrowserPanel.DEFAULT_PAGE, getBrowserPanel().getLoadedUrl());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertListMatching(getPersonListPanel(), getModel().getFilteredPersonList());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // assert that the status bar too is updated correctly while the help window is open","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // note: the select command tested above does not update the status bar","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        executeCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNotEquals(StatusBarFooter.SYNC_STATUS_INITIAL, getStatusBarFooter().getSyncStatus());","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Asserts that the help window is open, and closes it after checking.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private void assertHelpWindowOpen() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        new HelpWindowHandle(guiRobot.getStage(HelpWindowHandle.HELP_WINDOW_TITLE)).close();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        getMainWindowHandle().focus();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Asserts that the help window isn\u0027t open.","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void assertHelpWindowNotOpen() {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ERROR_MESSAGE, HelpWindowHandle.isWindowPresent());","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"codeeong":1,"-":88}}]
